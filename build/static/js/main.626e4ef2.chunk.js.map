{"version":3,"sources":["utilities/authentication.js","containers/App/App.jsx","containers/App/ScrollToTop.jsx","containers/Layout/topbar/TopbarSidebarButton.jsx","containers/Layout/topbar/TopbarMenuLink.jsx","containers/Layout/topbar/TopbarProfile.jsx","containers/Layout/topbar/Topbar.jsx","containers/Layout/topbar_with_navigation/TopbarSidebarButton.jsx","containers/Layout/topbar_with_navigation/TopbarMenuLink.jsx","containers/Layout/topbar_with_navigation/TopbarProfile.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavLink.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavDashboards.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavUIElements.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavCategory.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavOtherPages.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNav.jsx","containers/Layout/topbar_with_navigation/TopbarWithNavigation.jsx","containers/Layout/sidebar/SidebarLink.jsx","containers/Layout/sidebar/SidebarContent.jsx","shared/prop-types/ReducerProps.js","containers/Layout/sidebar/Sidebar.jsx","containers/Layout/topbar_with_navigation/sidebar_mobile/SidebarLink.jsx","containers/Layout/topbar_with_navigation/sidebar_mobile/SidebarCategory.jsx","containers/Layout/topbar_with_navigation/sidebar_mobile/SidebarContent.jsx","containers/Layout/topbar_with_navigation/sidebar_mobile/SidebarMobile.jsx","containers/Layout/index.jsx","containers/App/MainWrapper.jsx","shared/prop-types/AccountProps.js","containers/Account/SignIn/components/SignInForm.jsx","services/authentication.js","containers/Account/SignIn/index.jsx","containers/Account/SignUp/components/SignUpForm.jsx","containers/Account/SignUp/index.jsx","containers/Account/SignOut/index.jsx","containers/Pages/Polls/forms/components/Questions.jsx","containers/Pages/Polls/forms/components/Sections.jsx","services/polls.js","services/genericQuestions.js","containers/Pages/Polls/forms/PollForm.jsx","containers/Pages/Polls/tables/columns.jsx","containers/Pages/Polls/serializers/index.js","containers/Pages/Polls/Polls.jsx","containers/Pages/Polls/PollsResults.jsx","containers/Pages/Polls/PollsTypes.jsx","containers/Pages/Polls/forms/PollTypeForm.jsx","containers/Pages/Polls/PollsTypeCreate.jsx","containers/Pages/GenericQuestions/serializers/index.js","containers/Pages/GenericQuestions/forms/components/Questions.jsx","containers/Pages/GenericQuestions/forms/GenericQuestionsForm.jsx","containers/Pages/GenericQuestions/GenericQuestionTypes.jsx","containers/Pages/GenericQuestions/tables/columns.jsx","shared/components/form/TimePicker.jsx","containers/Pages/Routines/forms/components/Activities.jsx","containers/Pages/Routines/forms/RoutinesForm.jsx","containers/Pages/Routines/serializers/index.js","services/routines.js","containers/Pages/Routines/Routines.jsx","containers/Pages/Routines/tables/columns.jsx","containers/Pages/Patients/components/PollResultsPanel.jsx","containers/Pages/Patients/PollsResults.jsx","containers/Pages/Patients/forms/PatientForm.jsx","services/exercises.js","containers/Pages/Patients/components/ExerciseComponent.jsx","containers/Pages/Patients/forms/ExerciseForm.jsx","containers/Pages/Patients/serializers/index.js","services/patients.js","containers/Pages/Patients/Patients.jsx","containers/Pages/Patients/tables/columns.jsx","containers/Pages/Notifications/forms/NotificationForm.jsx","services/notifications.js","containers/Pages/Notifications/ScheduledNotifications.jsx","containers/Pages/Notifications/tables/columns.jsx","containers/Pages/Exercises/ExercisesTypes.jsx","containers/Pages/Exercises/tables/columns.jsx","containers/App/Router.jsx","redux/reducers/rtlReducer.js","redux/reducers/themeReducer.js","redux/reducers/sidebarReducer.js","redux/reducers/customizerReducer.js","redux/reducers/newOrderTableReducer.js","containers/App/store.js","redux/actions/rtlActions.js","redux/actions/newOrderTableActions.js","index.jsx","redux/actions/customizerActions.js","utilities/express/response.js","redux/actions/themeActions.js","redux/actions/sidebarActions.js"],"names":["INTERVAL","openSession","console","log","localStorage","getItem","setInterval","Date","now","Number","removeItem","clearInterval","App","state","loading","loaded","window","addEventListener","setTimeout","setState","this","store","className","fill","d","Component","hot","module","ScrollToTop","prevProps","props","location","pathname","scrollTo","children","PureComponent","withRouter","icon","process","TopbarSidebarButton","changeMobileSidebarVisibility","changeSidebarVisibility","onClick","src","alt","TopbarMenuLinks","title","path","Link","to","Ava","TopbarProfile","toggle","collapse","user","JSON","parse","username","Collapse","isOpen","role","Topbar","TopbarMenuLink","TopbarNavLink","newLink","route","Badge","defaultProps","TopbarNavDashboards","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","TopbarNavUIElements","TopbarNavCategory","TopbarNavOtherPages","TopbarNav","TopbarWithNavigation","SidebarLink","comingSoon","NavLink","activeClassName","SidebarContent","hideSidebar","string","PropTypes","bool","shape","Sidebar","squaredCorners","withBoxShadow","topNavigation","show","direction","changeToDark","changeToLight","sidebar","sidebarClass","classNames","SidebarCategory","isNew","categoryClass","notification","Layout","dispatch","changeThemeToDark","changeThemeToLight","toggleTopNavigation","changeBorderRadius","toggleBoxShadow","NotificationSystem","newInstance","n","customizer","layoutClass","layout","SidebarMobile","connect","MainWrapper","userEmail","userName","accessToken","confirmed","theme","rtl","wrapperClass","wrapper","dir","account","SignInForm","password","showPassword","disableSubmitButton","onSubmit","bind","onFieldChange","prevState","target","id","value","event","preventDefault","type","name","defaultValue","placeholder","onChange","e","style","marginTop","handleResponse","require","API_PORT","REACT_APP_API_PORT","API_HOST","REACT_APP_API_HOST","API_URL","headers","signIn","data","callback","a","fetch","method","body","stringify","response","signUp","SignIn","error","undefined","messageToClient","alert","setItem","history","push","SignUpForm","passwordConfirm","showPasswordConfirm","disabled","SignUp","SignOut","Redirect","Questions","sectionIndex","deleteSection","questions","addQuestion","changeQuestion","changeQuestionType","deleteQuestion","genericQuestionTypes","isGeneralPollTypeSelected","components","map","questionIndex","question","questionId","genericQuestionTypesComponent","index","key","selectValue","height","component","marginRight","Button","size","color","width","filter","Fragment","Sections","sections","section","sectionId","marginBottom","createPoll","editPoll","pollId","createPollType","togglePollActivity","getAllPolls","getAllPollTypes","getGeneralPollResultsById","getMedicalPollResultsById","getAllGenericQuestions","createGenericQuestion","updateGenericQuestion","PollForm","types","sectionsCount","questionsCount","isGeneralPollSelected","addSection","changeType","errorMessage","mode","pollSections","length","s","reduce","b","isGeneralPoll","splice","onReturn","submitDisabled","subtypesComponent","selected","sub-type","float","marginLeft","ButtonToolbar","ExpanableMedicalResults","answers","pollResults","item","booleanAnswerDisplay","answer","displayAnswer","textAlign","serializeNewPoll","formData","isActive","i","nodeName","selectedOptions","startsWith","split","attributes","typeName","Polls","pollData","polls","results","select","create","edit","poll","serialized","elements","togglePoll","showPollResults","columns","selector","sortable","cell","row","pill","ButtonGroup","outline","backgroundColor","data-tip","Container","Row","Col","xs","md","lg","xl","Card","CardBody","pagination","defaultSortAsc","defaultSortField","PollsRersults","isGeneral","pollName","match","params","pollSubType","questionType","positivePercentage","Progress","percentages","join","expandableRows","expandableRowsComponent","pollsTypes","pollsTypesColumns","NewPollForm","subType","onTitleChange","onSubTypeChange","PollsTypeCreate","newPollType","PollTypeForm","serializeNewGenericQuestion","questionDescription","answersData","changeQuestionDescription","GenericQuestionsForm","answersCount","addGenericQuestion","changeName","reduxForm","form","GenericQuestionTypes","genericQuestionId","genericQuestionData","fetchTypes","editGenericQuestion","genericQuestionTypesColumns","TimePickerField","open","time","setOpen","toggleOpen","timeMode","btnClass","active","onOpen","onClose","showSecond","use12Hours","renderTimePickerField","input","Activities","isWeekDay","deleteActivity","activities","changeActivityDescription","addActivity","changeTime","activityIndex","activityDescription","startTime","endTime","activityId","activityType","TimePicker","Moment","format","RoutinesForm","weekdayActivities","weekdayActivitiesCount","weekendActivities","weekendActivitiesCount","isStartTime","serializeNewRoutine","activityTime","createDailyRoutine","getAllDailyRoutines","updateDailyRoutineById","toggleRoutineActivity","Routines","routineId","routineData","routines","toggleRoutine","editRoutine","AlertComponent","onCollapse","collapsed","sm","label","subhead","before","panelClass","hidingButtonColor","hidingButtonText","display","PollsResults","reverse","pollIndex","pollIndexKey","result","PatientForm","phone","onPhoneChange","createExerciseCategory","createExerciseCategoryType","getAllExercisesTypes","getAllExerciseCategoriesByUserId","userId","updateExerciseCategory","deleteExerciseCategoryById","ExerciseComponent","exercises","deleteExercise","setDescription","setUrl","exercise","exerciseIndex","exerciseId","description","url","ExerciseForm","exerciseTypes","exercisesCount","patient","addExercise","forEach","typesComponent","phoneNumber","serializeNewExercise","exerciseDescription","exerciseUrl","createPatient","sendPushToPatient","getAllPatients","togglePatientHospitalization","patientId","getMedicalPollResultsForUser","getAllPushNotificationsByUserId","Patients","patients","messages","message","subject","text","exerciseData","sendMessage","onSubjectChange","onMessageChange","fetchExercises","editExercise","notificationBody","notificationTitle","rowId","columnsMessages","parseInt","timeStamp","toLocaleDateString","columnsPatients","hospitalized","startTimestamp","endTimestamp","buildPatientsColumns","columnsExercises","NotificationForm","weekdays","onTimeChange","onWeekendChange","_d","includes","checked","flex","createScheduledNotification","editScheduledNotification","getAllScheduledNotifications","toggleScheduledNotification","notificationId","ScheduledNotifications","notifications","listNotifications","toggleNotification","selectNotification","createNotification","editNotification","columnsNotifications","ExercisesTypes","exercisesTypes","newName","newExerciseType","exercisesTypesColumns","handleOpenDialog","aria-labelledby","handleCloseDialog","fullWidth","onChangeName","handleSaveType","wrappedRoutes","Route","exact","PollsTypes","Router","Switch","initialState","items","quantity","sold","total","img","reducer","combineReducers","action","CHANGE_THEME_TO_DARK","CHANGE_THEME_TO_LIGHT","CHANGE_SIDEBAR_VISIBILITY","CHANGE_MOBILE_SIDEBAR_VISIBILITY","CHANGE_BORDER_RADIUS","TOGGLE_BOX_SHADOW","TOGGLE_TOP_NAVIGATION","newOrder","loadData","updatedItems","createStore","render","document","getElementById","status","json"],"mappings":"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","file":"static/js/main.626e4ef2.chunk.js","sourcesContent":["let INTERVAL = null;\n\n//(1000 Milliseconds = 1 second)\n// 10M 60,000\n// 12H 43,200,000\nlet SESSION_TIME = 90000; // 15 minutes session\n\nconst openSession = () => {\n  console.log(\"OPEN SESSION FOR\", localStorage.getItem(\"user\"));\n\n  INTERVAL = setInterval(() => {\n    if (Date.now() - Number(localStorage.getItem(\"last-action\")) > SESSION_TIME) {\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"last-action\");\n\n      clearInterval(INTERVAL);\n    }\n  }, SESSION_TIME);\n}\n\nexport {\n  openSession\n}\n","import { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { hot } from 'react-hot-loader';\r\n\r\nimport store from './store';\r\nimport Router from './Router';\r\nimport ScrollToTop from './ScrollToTop';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../scss/app.scss';\r\n\r\nimport { openSession } from '../../utilities/authentication';\r\n\r\nif (localStorage.getItem(\"user\")) {\r\n  openSession();\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('load', () => {\r\n      setTimeout(() => this.setState({ loaded: true }), 3000);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { loaded, loading } = this.state;\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <ScrollToTop>\r\n            <Fragment>\r\n              {!loaded &&\r\n                <div className={`load${loading ? '' : ' loaded'}`}>\r\n                  <div className=\"load__icon-wrap\">\r\n                    <svg className=\"load__icon\">\r\n                      <path fill=\"#4ce1b6\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              }\r\n              <div>\r\n                <Router />\r\n              </div>\r\n            </Fragment>\r\n          </ScrollToTop>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hot(module)(App);\r\n","import { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ScrollToTop extends PureComponent {\r\n  static propTypes = {\r\n    location: PropTypes.shape({\r\n      pathname: PropTypes.string,\r\n    }).isRequired,\r\n    children: PropTypes.element.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst icon = `${process.env.PUBLIC_URL}/img/burger.svg`;\r\n\r\nclass TopbarSidebarButton extends PureComponent {\r\n  static propTypes = {\r\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n    changeSidebarVisibility: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"topbar__button topbar__button--desktop\" onClick={changeSidebarVisibility}>\r\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\r\n        </button>\r\n        <button className=\"topbar__button topbar__button--mobile\" onClick={changeMobileSidebarVisibility}>\r\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopbarSidebarButton;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class TopbarMenuLinks extends PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { title, icon, path } = this.props;\r\n\r\n    return (\r\n      <Link className=\"topbar__link\" to={path}>\r\n        <span className={`topbar__link-icon lnr lnr-${icon}`} />\r\n        <p className=\"topbar__link-title\">{title}</p>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport { Collapse } from 'reactstrap';\r\nimport DownIcon from 'mdi-react/ChevronDownIcon';\r\n\r\nimport TopbarMenuLink from './TopbarMenuLink';\r\n\r\nconst Ava = `${process.env.PUBLIC_URL}/img/ava.png`;\r\n\r\nclass TopbarProfile extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      collapse: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  };\r\n\r\n  render() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    return (\r\n      <div className=\"topbar__profile\">\r\n        <button className=\"topbar__avatar\" onClick={this.toggle}>\r\n          <img className=\"topbar__avatar-img\" src={Ava} alt=\"avatar\" />\r\n          <p className=\"topbar__avatar-name\">{user.username}</p>\r\n          <DownIcon className=\"topbar__icon\" />\r\n        </button>\r\n        {this.state.collapse && <button className=\"topbar__back\" onClick={this.toggle} />}\r\n        <Collapse isOpen={this.state.collapse} className=\"topbar__menu-wrap\">\r\n          <div className=\"topbar__menu\">\r\n            { user.role === \"ADMIN\" && (\r\n              <div>\r\n                <TopbarMenuLink title=\"הוספת משתמש חדש\" icon=\"user\" path=\"/sign_up\" />\r\n                <div className=\"topbar__menu-divider\" />\r\n              </div>\r\n            )}\r\n            <TopbarMenuLink title=\"התנתק\" icon=\"exit\" path=\"/sign_out\" />\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopbarProfile;\r\n","import React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TopbarSidebarButton from './TopbarSidebarButton';\r\nimport TopbarProfile from './TopbarProfile';\r\n\r\nclass Topbar extends PureComponent {\r\n  static propTypes = {\r\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n    changeSidebarVisibility: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\r\n\r\n    return (\r\n      <div className=\"topbar\">\r\n        <div className=\"topbar__wrapper\">\r\n          <div className=\"topbar__left\">\r\n            <TopbarSidebarButton\r\n              changeMobileSidebarVisibility={changeMobileSidebarVisibility}\r\n              changeSidebarVisibility={changeSidebarVisibility}\r\n            />\r\n            <Link className=\"topbar__logo\" to=\"/dashboard_default\" />\r\n          </div>\r\n          <div className=\"topbar__right\">\r\n            <TopbarProfile />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topbar;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst icon = `${process.env.PUBLIC_URL}/img/burger.svg`;\r\n\r\nclass TopbarSidebarButton extends PureComponent {\r\n  static propTypes = {\r\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { changeMobileSidebarVisibility } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"topbar__button topbar__button--mobile\" onClick={changeMobileSidebarVisibility}>\r\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopbarSidebarButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TopbarMenuLinks = ({ title, icon, path }) => (\r\n  <Link className=\"topbar__link\" to={path}>\r\n    <span className={`topbar__link-icon lnr lnr-${icon}`} />\r\n    <p className=\"topbar__link-title\">{title}</p>\r\n  </Link>\r\n);\r\n\r\nTopbarMenuLinks.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TopbarMenuLinks;\r\n","import React, { PureComponent } from 'react';\r\nimport DownIcon from 'mdi-react/ChevronDownIcon';\r\nimport { Collapse } from 'reactstrap';\r\nimport TopbarMenuLink from './TopbarMenuLink';\r\n\r\nconst Ava = `${process.env.PUBLIC_URL}/img/ava.png`;\r\n\r\nexport default class TopbarProfile extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      collapse: false,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"topbar__profile\">\r\n        <button className=\"topbar__avatar\" onClick={this.toggle}>\r\n          <img className=\"topbar__avatar-img\" src={Ava} alt=\"avatar\" />\r\n          <p className=\"topbar__avatar-name\">Roman Johanson</p>\r\n          <DownIcon className=\"topbar__icon\" />\r\n        </button>\r\n        {this.state.collapse && <button className=\"topbar__back\" onClick={this.toggle} />}\r\n        <Collapse isOpen={this.state.collapse} className=\"topbar__menu-wrap\">\r\n          <div className=\"topbar__menu\">\r\n            <TopbarMenuLink title=\"My Profile\" icon=\"user\" path=\"/account/profile\" />\r\n            <TopbarMenuLink title=\"Calendar\" icon=\"calendar-full\" path=\"/default_pages/calendar\" />\r\n            <TopbarMenuLink title=\"Tasks\" icon=\"list\" path=\"/default_pages/calendar\" />\r\n            <TopbarMenuLink title=\"Inbox\" icon=\"inbox\" path=\"/mail\" />\r\n            <div className=\"topbar__menu-divider\" />\r\n            <TopbarMenuLink title=\"Account Settings\" icon=\"cog\" path=\"/account/profile\" />\r\n            <TopbarMenuLink title=\"Lock Screen\" icon=\"lock\" path=\"/lock_screen\" />\r\n            <TopbarMenuLink title=\"Log Out\" icon=\"exit\" path=\"/log_in\" />\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge } from 'reactstrap';\r\n\r\nconst TopbarNavLink = ({\r\n  title, icon, newLink, route,\r\n}) => (\r\n  <Link className=\"topbar__link\" to={route}>\r\n    {icon ? <span className={`topbar__link-icon lnr lnr-${icon}`} /> : ''}\r\n    <p className=\"topbar__link-title\">\r\n      {title}\r\n      {newLink ? <Badge className=\"topbar__link-badge\"><span>New</span></Badge> : ''}\r\n    </p>\r\n  </Link>\r\n);\r\n\r\n\r\nTopbarNavLink.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  newLink: PropTypes.bool,\r\n  route: PropTypes.string.isRequired,\r\n};\r\n\r\nTopbarNavLink.defaultProps = {\r\n  icon: '',\r\n  newLink: false,\r\n};\r\n\r\nexport default TopbarNavLink;\r\n","import React from 'react';\r\nimport DownIcon from 'mdi-react/ChevronDownIcon';\r\nimport { DropdownItem, DropdownToggle, DropdownMenu, UncontrolledDropdown } from 'reactstrap';\r\nimport TopbarNavLink from './TopbarNavLink';\r\n\r\nconst TopbarNavDashboards = () => (\r\n  <UncontrolledDropdown className=\"topbar__nav-dropdown\">\r\n    <DropdownToggle className=\"topbar__nav-dropdown-toggle\">\r\n      Dashboards <DownIcon />\r\n    </DropdownToggle>\r\n    <DropdownMenu className=\"topbar__nav-dropdown-menu dropdown__menu\">\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Dashboard Default\" icon=\"home\" route=\"/dashboard_default\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Dashboard E-commerce\" icon=\"store\" route=\"/dashboard_e_commerce\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Dashboard Fitness\" icon=\"heart-pulse\" route=\"/dashboard_fitness\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Dashboard Crypto\" icon=\"rocket\" route=\"/dashboard_crypto\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Dashboard Booking\" icon=\"apartment\" newLink route=\"/dashboard_booking\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Dashboard MobileApp\" icon=\"smartphone\" newLink route=\"/dashboard_mobile_app\" />\r\n      </DropdownItem>\r\n    </DropdownMenu>\r\n  </UncontrolledDropdown>\r\n);\r\n\r\n\r\nexport default TopbarNavDashboards;\r\n","import React from 'react';\r\nimport DownIcon from 'mdi-react/ChevronDownIcon';\r\nimport { DropdownItem, DropdownToggle, DropdownMenu, UncontrolledDropdown } from 'reactstrap';\r\nimport TopbarNavLink from './TopbarNavLink';\r\n\r\nconst TopbarNavUIElements = () => (\r\n  <UncontrolledDropdown className=\"topbar__nav-dropdown\">\r\n    <DropdownToggle className=\"topbar__nav-dropdown-toggle\">\r\n      UI elements<DownIcon />\r\n    </DropdownToggle>\r\n    <DropdownMenu className=\"topbar__nav-dropdown-menu dropdown__menu\">\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Alerts\" route=\"/ui/alerts\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Buttons\" route=\"/ui/buttons\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Carousel\" route=\"/ui/carousel\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Collapse\" route=\"/ui/collapse\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Grids\" route=\"/ui/grids\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Modals\" route=\"/ui/modals\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Notifications\" route=\"/ui/notifications\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Panels\" route=\"/ui/panels\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Progress Bars\" route=\"/ui/progress_bars\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Range Sliders\" route=\"/ui/range_sliders\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Tabs\" route=\"/ui/tabs\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Timeline\" route=\"/ui/timeline\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Tooltips & Popovers\" route=\"/ui/tooltips\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Typography\" route=\"/ui/typography\" />\r\n      </DropdownItem>\r\n    </DropdownMenu>\r\n  </UncontrolledDropdown>\r\n);\r\n\r\nexport default TopbarNavUIElements;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TopbarNavCategory = ({ title, icon, children }) => (\r\n  <div className=\"topbar__category-wrap\">\r\n    <div className=\"topbar__link topbar__category\">\r\n      {icon ? <span className={`topbar__link-icon lnr lnr-${icon}`} /> : ''}\r\n      <p className=\"topbar__link-title\">\r\n        {title}\r\n        <span className=\"topbar__category-icon lnr lnr-chevron-right\" />\r\n      </p>\r\n    </div>\r\n    <div className=\"topbar__submenu\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nTopbarNavCategory.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n};\r\n\r\nexport default TopbarNavCategory;\r\n","import React from 'react';\r\nimport DownIcon from 'mdi-react/ChevronDownIcon';\r\nimport { DropdownItem, DropdownToggle, DropdownMenu, UncontrolledDropdown } from 'reactstrap';\r\nimport TopbarNavLink from './TopbarNavLink';\r\nimport TopbarNavCategory from './TopbarNavCategory';\r\n\r\nconst TopbarNavOtherPages = () => (\r\n  <UncontrolledDropdown className=\"topbar__nav-dropdown\">\r\n    <DropdownToggle className=\"topbar__nav-dropdown-toggle\">\r\n      Other pages <DownIcon />\r\n    </DropdownToggle>\r\n    <DropdownMenu className=\"topbar__nav-dropdown-menu dropdown__menu\">\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Mail Application\" icon=\"envelope\" route=\"/mail\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Chat Application\" icon=\"bubble\" route=\"/chat\" />\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavCategory title=\"Forms\" icon=\"file-add\">\r\n          <TopbarNavLink title=\"Basic Form\" route=\"/forms/basic_form\" />\r\n          <TopbarNavLink title=\"Check Form Controls\" route=\"/forms/check_form_controls\" />\r\n          <TopbarNavLink title=\"File Upload\" route=\"/forms/file_upload\" />\r\n          <TopbarNavLink title=\"Floating Labels Form\" route=\"/forms/floating_labels_form\" />\r\n          <TopbarNavLink title=\"Form Dropzone\" route=\"/forms/form_dropzone\" />\r\n          <TopbarNavLink title=\"Form Layouts\" route=\"/forms/form_layouts\" />\r\n          <TopbarNavLink title=\"Form Picker\" route=\"/forms/form_picker\" />\r\n          <TopbarNavLink title=\"Form Validation\" route=\"/forms/form_validation\" />\r\n          <TopbarNavLink title=\"Mask Form\" route=\"/forms/mask_form\" />\r\n          <TopbarNavLink title=\"Material Form\" route=\"/forms/material_form\" />\r\n          <TopbarNavLink title=\"Wizard Form\" route=\"/forms/wizard_form\" />\r\n        </TopbarNavCategory>\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavCategory title=\"Tables\" icon=\"list\">\r\n          <TopbarNavLink title=\"Basic tables\" route=\"/tables/basic_tables\" />\r\n          <TopbarNavLink title=\"Data table\" route=\"/tables/data_table\" />\r\n          <TopbarNavLink title=\"Editable table\" route=\"/tables/editable_table\" />\r\n          <TopbarNavLink title=\"Material table\" route=\"/tables/material_table\" />\r\n        </TopbarNavCategory>\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavCategory title=\"Charts\" icon=\"chart-bars\">\r\n          <TopbarNavLink title=\"ChartsJS\" route=\"/charts/charts_js\" />\r\n          <TopbarNavLink title=\"React-vis\" route=\"/charts/react_vis\" />\r\n          <TopbarNavLink title=\"Recharts\" route=\"/charts/recharts\" />\r\n        </TopbarNavCategory>\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavCategory title=\"Maps\" icon=\"map\">\r\n          <TopbarNavLink title=\"Google map\" route=\"/maps/google_map\" />\r\n          <TopbarNavLink title=\"Vector map\" route=\"/maps/vector_map\" />\r\n        </TopbarNavCategory>\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavCategory title=\"Account\" icon=\"user\">\r\n          <TopbarNavLink title=\"Email Confirmation\" route=\"/account/email_confirmation\" />\r\n          <TopbarNavLink title=\"Lock Screen\" route=\"/lock_screen\" />\r\n          <TopbarNavLink title=\"Log In\" route=\"/log_in\" />\r\n          <TopbarNavLink title=\"Log In Photo\" route=\"/log_in_photo\" />\r\n          <TopbarNavLink title=\"Profile\" route=\"/account/profile\" />\r\n          <TopbarNavLink title=\"Register\" route=\"/register\" />\r\n          <TopbarNavLink title=\"Register Photo\" route=\"/register_photo\" />\r\n        </TopbarNavCategory>\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavCategory title=\"E-commerce\" icon=\"cart\">\r\n          <TopbarNavLink title=\"Cart\" route=\"/e-commerce/cart\" />\r\n          <TopbarNavLink title=\"Catalog\" route=\"/e-commerce/catalog\" />\r\n          <TopbarNavLink title=\"Orders List\" route=\"/e-commerce/orders_list\" />\r\n          <TopbarNavLink title=\"Payment\" route=\"/e-commerce/payment\" />\r\n          <TopbarNavLink title=\"Product Edit\" route=\"/e-commerce/product_edit\" />\r\n          <TopbarNavLink title=\"Product Page\" route=\"/e-commerce/product_page\" />\r\n          <TopbarNavLink title=\"Products List\" route=\"/e-commerce/products_list\" />\r\n        </TopbarNavCategory>\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavCategory title=\"Default Pages\" icon=\"file-empty\">\r\n          <TopbarNavLink title=\"404\" route=\"/404\" />\r\n          <TopbarNavLink title=\"Calendar\" route=\"/default_pages/calendar\" />\r\n          <TopbarNavLink title=\"FAQs\" route=\"/default_pages/faq\" />\r\n          <TopbarNavLink title=\"Gallery\" route=\"/default_pages/gallery\" />\r\n          <TopbarNavLink title=\"Invoice template\" route=\"/default_pages/invoice_template\" />\r\n          <TopbarNavLink title=\"Pricing Cards\" route=\"/default_pages/pricing_cards\" />\r\n          <TopbarNavLink title=\"Project Summary\" route=\"/default_pages/project_summary\" />\r\n          <TopbarNavLink title=\"Search Results\" route=\"/default_pages/search_results\" />\r\n          <TopbarNavLink title=\"Text Editor\" route=\"/default_pages/text_editor\" />\r\n        </TopbarNavCategory>\r\n      </DropdownItem>\r\n      <DropdownItem>\r\n        <TopbarNavLink title=\"Log Out\" icon=\"exit\" route=\"/log_in\" />\r\n      </DropdownItem>\r\n    </DropdownMenu>\r\n  </UncontrolledDropdown>\r\n);\r\n\r\nexport default TopbarNavOtherPages;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TopbarNavDashboards from './TopbarNavDashboards';\r\nimport TopbarNavUIElements from './TopbarNavUIElements';\r\nimport TopbarNavOtherPages from './TopbarNavOtherPages';\r\n\r\nconst TopbarNav = () => (\r\n  <nav className=\"topbar__nav\">\r\n    <TopbarNavDashboards />\r\n    <TopbarNavUIElements />\r\n    <TopbarNavOtherPages />\r\n    <Link className=\"topbar__nav-link\" to=\"/documentation/introduction\">Documentation</Link>\r\n  </nav>\r\n);\r\n\r\nexport default TopbarNav;\r\n","import React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TopbarSidebarButton from './TopbarSidebarButton';\r\nimport TopbarProfile from './TopbarProfile';\r\nimport TopbarNav from './tobar_nav/TopbarNav';\r\n\r\nexport default class TopbarWithNavigation extends PureComponent {\r\n  static propTypes = {\r\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { changeMobileSidebarVisibility } = this.props;\r\n\r\n    return (\r\n      <div className=\"topbar topbar--navigation\">\r\n        <div className=\"topbar__wrapper\">\r\n          <div className=\"topbar__left\">\r\n            <TopbarSidebarButton changeMobileSidebarVisibility={changeMobileSidebarVisibility} />\r\n            <Link className=\"topbar__logo\" to=\"/dashboard_default\" />\r\n          </div>\r\n          <TopbarNav />\r\n          <div className=\"topbar__right\">\r\n            <TopbarProfile />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SidebarLink = ({\r\n  title, icon, newLink, comingSoon, route, onClick,\r\n}) => (\r\n  <NavLink\r\n    to={route}\r\n    onClick={onClick}\r\n    activeClassName=\"sidebar__link-active\"\r\n  >\r\n    <li className=\"sidebar__link\">\r\n      {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\r\n      <p className=\"sidebar__link-title\">\r\n        {title}\r\n        {newLink ? <Badge className=\"sidebar__link-badge\"><span>new</span></Badge> : ''}\r\n        {comingSoon ? <Badge className=\"sidebar__link-soon\"><span>comming soon</span></Badge> : ''}\r\n      </p>\r\n    </li>\r\n  </NavLink>\r\n);\r\n\r\nSidebarLink.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  newLink: PropTypes.bool,\r\n  comingSoon: PropTypes.bool,\r\n  route: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nSidebarLink.defaultProps = {\r\n  icon: '',\r\n  route: '/',\r\n  newLink: false,\r\n  comingSoon: false,\r\n  onClick: () => {},\r\n};\r\n\r\nexport default SidebarLink;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarLink from './SidebarLink';\r\n\r\nclass SidebarContent extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  hideSidebar = () => {\r\n    this.props.onClick();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar__content\">\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink\r\n            title=\"רשימת סוגי סקרים\"\r\n            icon=\"book\"\r\n            route=\"/dash/polls/types\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n          <SidebarLink\r\n            title=\"רשימת הסקרים\"\r\n            icon=\"layers\"\r\n            route=\"/dash/polls\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n          <SidebarLink\r\n            title=\"שאלות גנריות\"\r\n            icon=\"layers\"\r\n            route=\"/dash/GenericQuestions/GenericQuestionTypes\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n        </ul>\r\n\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink\r\n            title=\"מטופלים\"\r\n            icon=\"users\"\r\n            route=\"/dash/patients\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n        </ul>\r\n\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink\r\n            title=\"לוז שבועי\"\r\n            icon=\"calendar-full\"\r\n            route=\"/dash/routines\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n        </ul>\r\n\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink\r\n            title=\"הודעות מתוזמנות\"\r\n            icon=\"redo\"\r\n            route=\"/dash/notifications\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n        </ul>\r\n\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink\r\n            title=\"רשימת סוגי פעילויות\"\r\n            icon=\"layers\"\r\n            route=\"/dash/exercises/types\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n        </ul>\r\n\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink title=\"התנתק\" icon=\"exit\" route=\"/sign_out\" />\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarContent;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst {\r\n  string, bool, shape,\r\n} = PropTypes;\r\n\r\nexport const CustomizerProps = shape({\r\n  squaredCorners: bool,\r\n  withBoxShadow: bool,\r\n  topNavigation: bool,\r\n});\r\n\r\nexport const SidebarProps = shape({\r\n  show: PropTypes.bool,\r\n  collapse: PropTypes.bool,\r\n});\r\n\r\nexport const ThemeProps = shape({\r\n  className: string,\r\n});\r\n\r\nexport const RTLProps = shape({\r\n  direction: string,\r\n});\r\n","import React from 'react';\r\nimport Scrollbar from 'react-smooth-scrollbar';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarContent from './SidebarContent';\r\nimport { SidebarProps } from '../../../shared/prop-types/ReducerProps';\r\n\r\nconst Sidebar = ({\r\n  changeToDark, changeToLight, changeMobileSidebarVisibility, sidebar,\r\n}) => {\r\n  const sidebarClass = classNames({\r\n    sidebar: true,\r\n    'sidebar--show': sidebar.show,\r\n    'sidebar--collapse': sidebar.collapse,\r\n  });\r\n\r\n  return (\r\n    <div className={sidebarClass}>\r\n      <button className=\"sidebar__back\" onClick={changeMobileSidebarVisibility} />\r\n      <Scrollbar className=\"sidebar__scroll scroll\">\r\n        <div className=\"sidebar__wrapper sidebar__wrapper--desktop\">\r\n          <SidebarContent\r\n            onClick={() => {}}\r\n            changeToDark={changeToDark}\r\n            changeToLight={changeToLight}\r\n          />\r\n        </div>\r\n        <div className=\"sidebar__wrapper sidebar__wrapper--mobile\">\r\n          <SidebarContent\r\n            onClick={changeMobileSidebarVisibility}\r\n            changeToDark={changeToDark}\r\n            changeToLight={changeToLight}\r\n          />\r\n        </div>\r\n      </Scrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  sidebar: SidebarProps.isRequired,\r\n  changeToDark: PropTypes.func.isRequired,\r\n  changeToLight: PropTypes.func.isRequired,\r\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SidebarLink = ({\r\n  title, icon, newLink, route, onClick,\r\n}) => (\r\n  <NavLink\r\n    to={route}\r\n    onClick={onClick}\r\n    activeClassName=\"sidebar__link-active\"\r\n  >\r\n    <li className=\"sidebar__link\">\r\n      {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\r\n      <p className=\"sidebar__link-title\">\r\n        {title}\r\n        {newLink ? <Badge className=\"sidebar__link-badge\"><span>New</span></Badge> : ''}\r\n      </p>\r\n    </li>\r\n  </NavLink>\r\n);\r\n\r\nSidebarLink.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  newLink: PropTypes.bool,\r\n  route: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nSidebarLink.defaultProps = {\r\n  icon: '',\r\n  newLink: false,\r\n  route: '/',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default SidebarLink;\r\n","import React, { Component } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nexport default class SidebarCategory extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string,\r\n    isNew: PropTypes.bool,\r\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    icon: '',\r\n    isNew: false,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      collapse: false,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title, icon, isNew, children,\r\n    } = this.props;\r\n    const categoryClass = classNames({\r\n      'sidebar__category-wrap': true,\r\n      'sidebar__category-wrap--open': this.state.collapse,\r\n    });\r\n\r\n    return (\r\n      <div className={categoryClass}>\r\n        <button className=\"sidebar__link sidebar__category\" onClick={this.toggle}>\r\n          {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\r\n          <p className=\"sidebar__link-title\">{title}\r\n            {isNew && <span className=\"sidebar__category-new\" />}\r\n          </p>\r\n          <span className=\"sidebar__category-icon lnr lnr-chevron-right\" />\r\n        </button>\r\n        <Collapse isOpen={this.state.collapse} className=\"sidebar__submenu-wrap\">\r\n          <ul className=\"sidebar__submenu\">\r\n            <div>\r\n              {children}\r\n            </div>\r\n          </ul>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarLink from './SidebarLink';\r\nimport SidebarCategory from './SidebarCategory';\r\n\r\nclass SidebarContent extends Component {\r\n  static propTypes = {\r\n    changeToDark: PropTypes.func.isRequired,\r\n    changeToLight: PropTypes.func.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  hideSidebar = () => {\r\n    this.props.onClick();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar__content\">\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink title=\"Dashboard Default\" icon=\"home\" route=\"/dashboard_default\" onClick={this.hideSidebar} />\r\n          <SidebarLink\r\n            title=\"Dashboard E-commerce\"\r\n            icon=\"store\"\r\n            route=\"/dashboard_e_commerce\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n          <SidebarLink\r\n            title=\"Dashboard Fitness\"\r\n            icon=\"heart-pulse\"\r\n            newLink\r\n            route=\"/dashboard_fitness\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n          <SidebarLink\r\n            title=\"Dashboard Crypto\"\r\n            icon=\"rocket\"\r\n            newLink\r\n            route=\"/dashboard_crypto\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n          <SidebarLink\r\n            title=\"Dashboard Booking\"\r\n            icon=\"rocket\"\r\n            newLink\r\n            route=\"/dashboard_booking\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n          <SidebarCategory title=\"Layout\" icon=\"layers\">\r\n            <button className=\"sidebar__link\" onClick={this.props.changeToLight}>\r\n              <p className=\"sidebar__link-title\">Light Theme</p>\r\n            </button>\r\n            <button className=\"sidebar__link\" onClick={this.props.changeToDark}>\r\n              <p className=\"sidebar__link-title\">Dark Theme</p>\r\n            </button>\r\n          </SidebarCategory>\r\n        </ul>\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarCategory title=\"UI Elements\" icon=\"diamond\">\r\n            <SidebarLink title=\"Alerts\" route=\"/ui/alerts\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Buttons\" route=\"/ui/buttons\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Carousel\" route=\"/ui/carousel\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Collapse\" route=\"/ui/collapse\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Grids\" route=\"/ui/grids\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Modals\" route=\"/ui/modals\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Notifications\" route=\"/ui/notifications\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Panels\" route=\"/ui/panels\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Progress Bars\" route=\"/ui/progress_bars\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Range Sliders\" route=\"/ui/range_sliders\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Tabs\" route=\"/ui/tabs\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Timeline\" route=\"/ui/timeline\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Tooltips & Popovers\" route=\"/ui/tooltips\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Typography\" route=\"/ui/typography\" onClick={this.hideSidebar} />\r\n          </SidebarCategory>\r\n          <SidebarLink title=\"Mail Application\" icon=\"envelope\" route=\"/mail\" onClick={this.hideSidebar} />\r\n          <SidebarLink title=\"Chat Application\" icon=\"bubble\" route=\"/chat\" onClick={this.hideSidebar} />\r\n          <SidebarCategory title=\"Forms\" icon=\"file-add\">\r\n            <SidebarLink title=\"Basic Form\" route=\"/forms/basic_form\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Check Form Controls\" route=\"/forms/check_form_controls\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"File Upload\" route=\"/forms/file_upload\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Floating Labels Form\" route=\"/forms/floating_labels_form\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Form Dropzone\" route=\"/forms/form_dropzone\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Form Layouts\" route=\"/forms/form_layouts\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Form Picker\" route=\"/forms/form_picker\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Form Validation\" route=\"/forms/form_validation\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Mask Form\" route=\"/forms/mask_form\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Material Form\" route=\"/forms/material_form\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Wizard Form\" route=\"/forms/wizard_form\" onClick={this.hideSidebar} />\r\n          </SidebarCategory>\r\n          <SidebarCategory title=\"Tables\" icon=\"list\" isNew>\r\n            <SidebarLink title=\"Basic tables\" route=\"/tables/basic_tables\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Data table\" route=\"/tables/data_table\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Editable table\" route=\"/tables/editable_table\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Material table\" newLink route=\"/tables/material_table\" onClick={this.hideSidebar} />\r\n          </SidebarCategory>\r\n          <SidebarCategory title=\"Charts\" icon=\"chart-bars\">\r\n            <SidebarLink title=\"ChartsJS\" route=\"/charts/charts_js\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"React-vis\" route=\"/charts/react_vis\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Recharts\" route=\"/charts/recharts\" onClick={this.hideSidebar} />\r\n          </SidebarCategory>\r\n          <SidebarCategory title=\"Maps\" icon=\"map\">\r\n            <SidebarLink title=\"Google map\" route=\"/maps/google_map\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Vector map\" route=\"/maps/vector_map\" onClick={this.hideSidebar} />\r\n          </SidebarCategory>\r\n        </ul>\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarCategory title=\"Account\" icon=\"user\">\r\n            <SidebarLink title=\"Email Confirmation\" route=\"/account/email_confirmation\" />\r\n            <SidebarLink title=\"Lock Screen\" route=\"/lock_screen\" />\r\n            <SidebarLink title=\"Log In\" route=\"/log_in\" />\r\n            <SidebarLink title=\"Log In Photo\" route=\"/log_in_photo\" />\r\n            <SidebarLink title=\"Profile\" route=\"/account/profile\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Register\" route=\"/register\" />\r\n            <SidebarLink title=\"Register Photo\" route=\"/register_photo\" />\r\n          </SidebarCategory>\r\n          <SidebarCategory title=\"E-commerce\" icon=\"cart\">\r\n            <SidebarLink title=\"Cart\" route=\"/e-commerce/cart\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Catalog\" route=\"/e-commerce/catalog\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Orders List\" route=\"/e-commerce/orders_list\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Payment\" route=\"/e-commerce/payment\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Product Edit\" route=\"/e-commerce/product_edit\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Product Page\" route=\"/e-commerce/product_page\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Products List\" route=\"/e-commerce/products_list\" onClick={this.hideSidebar} />\r\n          </SidebarCategory>\r\n          <SidebarCategory title=\"Default Pages\" icon=\"file-empty\">\r\n            <SidebarLink title=\"404\" route=\"/404\" />\r\n            <SidebarLink title=\"Calendar\" route=\"/default_pages/calendar\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"FAQs\" route=\"/default_pages/faq\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Gallery\" route=\"/default_pages/gallery\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Invoice template\" route=\"/default_pages/invoice_template\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Pricing Cards\" route=\"/default_pages/pricing_cards\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Project Summary\" route=\"/default_pages/project_summary\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Search Results\" route=\"/default_pages/search_results\" onClick={this.hideSidebar} />\r\n            <SidebarLink title=\"Text Editor\" route=\"/default_pages/text_editor\" onClick={this.hideSidebar} />\r\n          </SidebarCategory>\r\n          <SidebarCategory title=\"Multilevel Menu \" icon=\"menu\">\r\n            <SidebarLink title=\"Second Level Item\" />\r\n            <SidebarCategory title=\"Second Level Item\">\r\n              <SidebarLink title=\"Third Level Item\" />\r\n              <SidebarLink title=\"Third Level Item\" />\r\n            </SidebarCategory>\r\n          </SidebarCategory>\r\n        </ul>\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink title=\"Log Out\" icon=\"exit\" route=\"/log_in\" />\r\n        </ul>\r\n        <ul className=\"sidebar__block\">\r\n          <SidebarLink\r\n            title=\"Documentation\"\r\n            icon=\"text-align-justify\"\r\n            route=\"/documentation/introduction\"\r\n            onClick={this.hideSidebar}\r\n          />\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarContent;\r\n","import React from 'react';\r\nimport Scrollbar from 'react-smooth-scrollbar';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarContent from './SidebarContent';\r\nimport { SidebarProps } from '../../../../shared/prop-types/ReducerProps';\r\n\r\nconst Sidebar = ({\r\n  changeToDark, changeToLight, changeMobileSidebarVisibility, sidebar,\r\n}) => {\r\n  const sidebarClass = classNames({\r\n    'sidebar sidebar--no-desktop': true,\r\n    'sidebar--show': sidebar.show,\r\n  });\r\n\r\n  return (\r\n    <div className={sidebarClass}>\r\n      <button className=\"sidebar__back\" onClick={changeMobileSidebarVisibility} />\r\n      <Scrollbar className=\"sidebar__scroll scroll\">\r\n        <div className=\"sidebar__wrapper sidebar__wrapper--mobile\">\r\n          <SidebarContent\r\n            onClick={changeMobileSidebarVisibility}\r\n            changeToDark={changeToDark}\r\n            changeToLight={changeToLight}\r\n          />\r\n        </div>\r\n      </Scrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  sidebar: SidebarProps.isRequired,\r\n  changeToDark: PropTypes.func.isRequired,\r\n  changeToLight: PropTypes.func.isRequired,\r\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable no-return-assign */\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport NotificationSystem from 'rc-notification';\r\n\r\nimport Topbar from './topbar/Topbar';\r\nimport TopbarWithNavigation from './topbar_with_navigation/TopbarWithNavigation';\r\n\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport SidebarMobile from './topbar_with_navigation/sidebar_mobile/SidebarMobile';\r\n\r\nimport { changeThemeToDark, changeThemeToLight } from '../../redux/actions/themeActions';\r\nimport { CustomizerProps, SidebarProps } from '../../shared/prop-types/ReducerProps';\r\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '../../redux/actions/sidebarActions';\r\nimport { changeBorderRadius, toggleBoxShadow, toggleTopNavigation } from '../../redux/actions/customizerActions';\r\n\r\nwindow.notification = null;\r\n\r\nclass Layout extends Component {\r\n  static propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    sidebar: SidebarProps.isRequired,\r\n    customizer: CustomizerProps.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    NotificationSystem.newInstance({}, n => window.notification = n);\r\n  }\r\n\r\n  changeSidebarVisibility = () => {\r\n    this.props.dispatch(changeSidebarVisibility());\r\n  };\r\n\r\n  changeMobileSidebarVisibility = () => {\r\n    this.props.dispatch(changeMobileSidebarVisibility());\r\n  };\r\n\r\n  changeToDark = () => {\r\n    this.props.dispatch(changeThemeToDark());\r\n  };\r\n\r\n  changeToLight = () => {\r\n    this.props.dispatch(changeThemeToLight());\r\n  };\r\n\r\n  toggleTopNavigation = () => {\r\n    this.props.dispatch(toggleTopNavigation());\r\n  };\r\n\r\n  changeBorderRadius = () => {\r\n    this.props.dispatch(changeBorderRadius());\r\n  };\r\n\r\n  toggleBoxShadow = () => {\r\n    this.props.dispatch(toggleBoxShadow());\r\n  };\r\n\r\n  render() {\r\n    const { customizer, sidebar } = this.props;\r\n    const layoutClass = classNames({\r\n      layout: true,\r\n      'layout--collapse': sidebar.collapse,\r\n      'layout--top-navigation': customizer.topNavigation,\r\n    });\r\n\r\n    return (\r\n      <div className={layoutClass}>\r\n        {this.props.customizer.topNavigation ?\r\n          <TopbarWithNavigation\r\n            changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\r\n          /> :\r\n          <Topbar\r\n            changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\r\n            changeSidebarVisibility={this.changeSidebarVisibility}\r\n          />\r\n        }\r\n        {this.props.customizer.topNavigation ?\r\n          <SidebarMobile\r\n            sidebar={sidebar}\r\n            changeToDark={this.changeToDark}\r\n            changeToLight={this.changeToLight}\r\n            changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\r\n          /> :\r\n          <Sidebar\r\n            sidebar={sidebar}\r\n            changeToDark={this.changeToDark}\r\n            changeToLight={this.changeToLight}\r\n            changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(state => ({\r\n  customizer: state.customizer,\r\n  sidebar: state.sidebar,\r\n}))(Layout));\r\n","import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { connect } from 'react-redux';\r\nimport React, { PureComponent } from 'react';\r\n\r\nimport AccountProps from '../../shared/prop-types/AccountProps';\r\nimport { ThemeProps, RTLProps } from '../../shared/prop-types/ReducerProps';\r\n\r\nclass MainWrapper extends PureComponent {\r\n  static propTypes = {\r\n    rtl: RTLProps.isRequired,\r\n    theme: ThemeProps.isRequired,\r\n    account: AccountProps.isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { theme, rtl } = this.props;\r\n    const wrapperClass = classNames({ wrapper: true });\r\n\r\n    return (\r\n      <div className={`${theme.className} ${rtl.direction}-support`} dir={rtl.direction}>\r\n        <div className={wrapperClass}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst statesForConnection = state => ({\r\n  rtl: state.rtl,\r\n  theme: state.theme,\r\n  account: state.account,\r\n});\r\n\r\nexport default connect(statesForConnection)(MainWrapper);\r\n","import PropTypes from 'prop-types';\r\n\r\nconst { shape } = PropTypes;\r\n\r\nconst AccountProps = shape({\r\n  userEmail: PropTypes.string,\r\n  userName: PropTypes.string,\r\n  accessToken: PropTypes.string,\r\n  confirmed: PropTypes.bool,\r\n});\r\n\r\nexport default AccountProps;\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport EyeIcon from 'mdi-react/EyeIcon';\r\nimport KeyVariantIcon from 'mdi-react/KeyVariantIcon';\r\nimport AccountOutlineIcon from 'mdi-react/AccountOutlineIcon';\r\n\r\nclass SignInForm extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      showPassword: false,\r\n      disableSubmitButton: false\r\n    };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.showPassword = this.showPassword.bind(this);\r\n    this.onFieldChange = this.onFieldChange.bind(this);\r\n  }\r\n\r\n  showPassword() {\r\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\r\n  }\r\n\r\n  onFieldChange({ target }) {\r\n    this.setState({ [target.id]: target.value });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.username, this.state.password);\r\n  }\r\n\r\n  render() {\r\n    const { username, password, showPassword } = this.state;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        {/* Username Field */}\r\n        <div className=\"form__form-group\">\r\n          <span className=\"form__form-group-label\">שם משתמש:</span>\r\n          <div className=\"form__form-group-field\">\r\n            <div className=\"form__form-group-icon\"><AccountOutlineIcon /></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              defaultValue={username}\r\n              placeholder=\"הכנס שם משתמש\"\r\n              onChange={this.onFieldChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Password Field */}\r\n        <div className=\"form__form-group\">\r\n          <span className=\"form__form-group-label\">סיסמא:</span>\r\n          <div className=\"form__form-group-field\">\r\n            <div className=\"form__form-group-icon\"><KeyVariantIcon /></div>\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"הכנס סיסמה\"\r\n              defaultValue={password}\r\n              onChange={this.onFieldChange}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={e => this.showPassword(e)}\r\n              className={`form__form-group-button${showPassword ? \" active\" : \"\"}`}\r\n            >\r\n              <EyeIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"account__btns\" style={{ marginTop: \"10px\" }}>\r\n          <button type=\"submit\" className=\"btn btn-primary account__btn\">\r\n            התחבר\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInForm;\r\n","const { handleResponse } = require('../utilities/express/response');\n\nconst API_PORT = process.env.REACT_APP_API_PORT || '2304';\nconst API_HOST = process.env.REACT_APP_API_HOST || 'http://23.21.185.104';\nconst API_URL = `${API_HOST}:${API_PORT}`;\n\nconst headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\n\nconst signIn = async (data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/loginMedicalStaffUser`, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  handleResponse(response, callback);\n};\n\nconst signUp = async (data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/registerMedicalStaffUser`, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  handleResponse(response, callback);\n};\n\nexport {\n  signIn,\n  signUp\n};\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport SignInForm from './components/SignInForm';\r\nimport { signIn } from '../../../services/authentication';\r\nimport { openSession } from '../../../utilities/authentication';\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(userName, password) {\r\n    signIn({ userName, password }, (error, user) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n      } else {\r\n        localStorage.setItem(\"user\", JSON.stringify({\r\n          role: user.role,\r\n          username: user.userName\r\n        }));\r\n\r\n        openSession();\r\n        this.props.history.push(\"/dash/polls\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/dash/polls\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"account\">\r\n        <div className=\"account__wrapper\">\r\n          <div className=\"account__card\">\r\n            <div className=\"account__head\">\r\n              <h3 className=\"account__title\">מערכת ניהול\r\n                <span className=\"account__logo\"> Sharee-\r\n                  <span className=\"account__logo-accent\">Web</span>\r\n                </span>\r\n              </h3>\r\n              <h4 className=\"account__subhead subhead\">כניסה למערכת</h4>\r\n            </div>\r\n            <SignInForm onSubmit={this.onSubmit} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignIn);\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport EyeIcon from 'mdi-react/EyeIcon';\r\nimport KeyVariantIcon from 'mdi-react/KeyVariantIcon';\r\nimport AccountOutlineIcon from 'mdi-react/AccountOutlineIcon';\r\n\r\nclass SignUpForm extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      showPassword: false,\r\n      showPasswordConfirm: false,\r\n      disableSubmitButton: false,\r\n    };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onFieldChange = this.onFieldChange.bind(this);\r\n    this.showPassword = this.showPassword.bind(this);\r\n    this.showPasswordConfirm = this.showPasswordConfirm.bind(this);\r\n    this.disableSubmitButton = this.disableSubmitButton.bind(this);\r\n  }\r\n\r\n  onFieldChange({ target }) {\r\n    this.setState({ [target.id]: target.value });\r\n  }\r\n\r\n  showPassword() {\r\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\r\n  }\r\n\r\n  showPasswordConfirm() {\r\n    this.setState(prevState => ({ showPasswordConfirm: !prevState.showPasswordConfirm }));\r\n  }\r\n\r\n  disableSubmitButton() {\r\n    this.setState(prevState => ({ disableSubmitButton: !prevState.disableSubmitButton }));\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.username, this.state.password, this.state.passwordConfirm);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      passwordConfirm,\r\n      showPassword,\r\n      showPasswordConfirm,\r\n      disableSubmitButton\r\n    } = this.state;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        {/* Email Field */}\r\n        <div className=\"form__form-group\">\r\n          <span className=\"form__form-group-label\">שם משתמש:</span>\r\n          <div className=\"form__form-group-field\">\r\n            <div className=\"form__form-group-icon\"><AccountOutlineIcon /></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              defaultValue={username}\r\n              placeholder=\"הכנס שם משתמש\"\r\n              onChange={this.onFieldChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Password Field */}\r\n        <div className=\"form__form-group form__form-group--forgot\">\r\n          <span className=\"form__form-group-label\">סיסמא:</span>\r\n          <div className=\"form__form-group-field\">\r\n            <div className=\"form__form-group-icon\"><KeyVariantIcon /></div>\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"הכנס סיסמה\"\r\n              defaultValue={password}\r\n              onChange={this.onFieldChange}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.showPassword}\r\n              className={`form__form-group-button${showPassword ? ' active' : ''}`}\r\n            >\r\n              <EyeIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Repeat Password Field */}\r\n        <div className=\"form__form-group form__form-group--forgot\">\r\n          <div className=\"form__form-group-field\">\r\n            <div className=\"form__form-group-icon\"><KeyVariantIcon /></div>\r\n            <input\r\n              type={showPasswordConfirm ? \"text\" : \"password\"}\r\n              id=\"passwordConfirm\"\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"הכנס סיסמה עוד פעם\"\r\n              defaultValue={passwordConfirm}\r\n              onChange={this.onFieldChange}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.showPasswordConfirm}\r\n              className={`form__form-group-button${showPasswordConfirm ? ' active' : ''}`}\r\n            >\r\n              <EyeIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"account__btns\" style={{ marginTop: \"10px\" }}>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={disableSubmitButton}\r\n            className=\"btn btn-primary account__btn\"\r\n          >\r\n            צור משתמש חדש\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport SignUpForm from './components/SignUpForm';\r\nimport { signUp } from '../../../services/authentication';\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(userName, password, passwordConfirm) {\r\n    if (!userName || !password || !passwordConfirm) {\r\n      alert('נא למלא את כל השדות');\r\n    } else if (password !== passwordConfirm) {\r\n      alert('סיסמה לא תואמת');\r\n    } else {\r\n      signUp({ userName, password }, (error, user) => {\r\n        if (error) {\r\n          console.log(error);\r\n          if (error.messageToClient === undefined) {\r\n            alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n          } else {\r\n            alert(error.messageToClient);\r\n          }\r\n\r\n        } else {\r\n          alert(\"המשתמש \" + userName + \" נוצר בהצלחה\");\r\n          if (localStorage.getItem(\"user\")) {\r\n                this.props.history.push(\"/dash/polls\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (!user || user.role !== \"ADMIN\") {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"account\">\r\n        <div className=\"account__wrapper\">\r\n          <div className=\"account__card\">\r\n            <div className=\"account__head\">\r\n              <h3 className=\"account__title\">מערכת ניהול\r\n                <span className=\"account__logo\"> Sharee-\r\n                  <span className=\"account__logo-accent\">Web</span>\r\n                </span>\r\n              </h3>\r\n              <h4 className=\"account__subhead subhead\">הוספת משתמש חדש</h4>\r\n            </div>\r\n            <SignUpForm onSubmit={this.onSubmit} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","/* eslint-disable react/forbid-prop-types */\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignOut extends Component {\r\n  render() {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"last-action\");\r\n\r\n    return (<Redirect to=\"/sign_in\" />);\r\n  }\r\n}\r\n\r\nexport default SignOut;\r\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\n\nconst Questions = ({\n  sectionIndex, deleteSection, questions,\n  addQuestion, changeQuestion, changeQuestionType,\n  deleteQuestion, genericQuestionTypes, isGeneralPollTypeSelected\n}) => {\n\n  const components = questions.map(\n    ({ question, type, name }, questionIndex) => {\n      const questionId = `question_${sectionIndex}_${questionIndex}`;\n      const genericQuestionTypesComponent = genericQuestionTypes.map((type, index) => {\n        if (!isGeneralPollTypeSelected) {\n          return (\n            <option\n              value={`GENERIC_${type.name}`}\n              key={`generic_${type.name}_${index}`}>\n              {type.name}\n            </option>\n          );\n        }\n      });\n\n      let selectValue = type\n      if (type === \"GENERIC\") {\n        selectValue = `GENERIC_${name}`\n      }\n\n      return (\n        <div key={questionId} className=\"form__form-group\">\n          <div className=\"form__form-group-field\" style={{ height: 34}}>\n            <input\n              type=\"text\"\n              value={question}\n              component=\"input\"\n              placeholder=\"שאלה\"\n              id={`${questionId}_text`}\n              name={`${questionId}_text`}\n              onChange={({ target }) => changeQuestion(sectionIndex, questionIndex, target.value)}\n            />\n\n            <select\n              value={selectValue}\n              id={`${questionId}_type`}\n              name={`${questionId}_type`}\n              style={{ marginRight: \"20px\" }}\n              onChange={({ target }) => changeQuestionType(sectionIndex, questionIndex, target.value)}\n            >\n              <option value=\"BOOLEAN\">כן/לא</option>\n              <option value=\"TEXTUAL\">טקסט חופשי</option>\n              <option value=\"NUMERICAL\">דירוג מספרי 1-5</option>\n              {genericQuestionTypesComponent}\n            </select>\n\n            <Button\n              size=\"sm\"\n              color=\"danger\"\n              onClick={() => deleteQuestion(sectionIndex, questionIndex)}\n              style={{ marginRight: \"20px\", height: 35, width: 240}}\n            >\n              מחיקת שאלה\n            </Button>\n          </div>\n\n        </div>\n      )\n    }\n  ).filter(component => component);\n\n  components.push(\n    <React.Fragment>\n    <div key=\"sectionActions\" className=\"form__form-group-field\">\n      <Button size=\"sm\" color=\"primary\" onClick={() => addQuestion(sectionIndex)}>הוספת שאלה</Button>\n      <Button size=\"sm\" color=\"danger\" onClick={() => deleteSection(sectionIndex)}>מחיקת סעיף</Button>\n    </div>\n    </React.Fragment>\n  );\n\n  return components;\n}\n\nexport default Questions;\n","import React from \"react\";\n\nimport Questions from './Questions';\n\nconst Sections = ({\n  sections, deleteSection, addQuestion, changeQuestion, changeQuestionType, deleteQuestion, genericQuestionTypes, isGeneralPollTypeSelected\n}) => {\n\n  const components = sections.map(\n    (section, sectionIndex) => {\n      const sectionId = `section_${sectionIndex}`;\n\n      return (\n        <div key={sectionId} className=\"form__form-group\" style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n          <span className=\"form__form-group-label\"><b>סעיף {sectionIndex + 1}:</b></span>\n\n          <div key={`n_${sectionId}`} className=\"form__form-group-field\">\n            <input\n              type=\"text\"\n              placeholder=\"שם הסעיף\"\n              defaultValue={section.name}\n              id={`section_name_${sectionIndex}`}\n              name={`section_name_${sectionIndex}`}\n            />\n          </div>\n\n          <div key={`q_${sectionId}`} className=\"form__form-group\" style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n            <Questions\n              sectionIndex={sectionIndex}\n              questions={section.questions}\n              addQuestion={addQuestion}\n              changeQuestion={changeQuestion}\n              changeQuestionType={changeQuestionType}\n              deleteQuestion={deleteQuestion}\n              deleteSection={deleteSection}\n              genericQuestionTypes={genericQuestionTypes}\n              isGeneralPollTypeSelected={isGeneralPollTypeSelected}\n            />\n          </div>\n        </div>\n      )\n    }\n  );\n\n  return components;\n}\n\nexport default Sections;\n","const { handleResponse } = require('../utilities/express/response');\n\nconst API_PORT = process.env.REACT_APP_API_PORT || '2304';\nconst API_HOST = process.env.REACT_APP_API_HOST || 'http://23.21.185.104';\nconst API_URL = `${API_HOST}:${API_PORT}`;\n\nconst headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\n\nconst createPoll = async (data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/createPoll`, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  handleResponse(response, callback);\n};\n\nconst editPoll = async (pollId, data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/updatePoll/id/${pollId}`, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  handleResponse(response, callback);\n};\n\nconst createPollType = async (data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/createPollType`, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  handleResponse(response, callback);\n};\n\nconst togglePollActivity = async (pollId, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/togglePollActivity/id/${pollId}`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nconst getAllPolls = async (callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/getAllPolls`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nconst getAllPollTypes = async (callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/getAllPollTypes`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nconst getGeneralPollResultsById = async (pollId, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/getGeneralPollResultsById/id/${pollId}`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nconst getMedicalPollResultsById = async (pollId, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/getMedicalPollResultsById/id/${pollId}`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nexport {\n  createPoll,\n  editPoll,\n  createPollType,\n  togglePollActivity,\n  getAllPolls,\n  getAllPollTypes,\n  getGeneralPollResultsById,\n  getMedicalPollResultsById\n};\n","const { handleResponse } = require('../utilities/express/response');\n\nconst API_PORT = process.env.API_PORT || '2304';\nconst API_HOST = process.env.API_HOST || 'http://localhost';\nconst API_URL = `${API_HOST}:${API_PORT}`;\n\nconst headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\n\n const getAllGenericQuestions = async (callback) => {\n      const response = await fetch(`${API_URL}/medicalStaff/getAllGenericQuestions`, { method: 'GET' });\n\n      handleResponse(response, callback);\n }\n\n const createGenericQuestion = async (data, callback) => {\n       const response = await fetch(`${API_URL}/medicalStaff/createGenericQuestion`, {\n       method: 'POST',\n       headers: headers,\n       body: JSON.stringify(data),\n       });\n\n       handleResponse(response, callback);\n  }\n\n const updateGenericQuestion = async (id, data, callback) => {\n     const response = await fetch(`${API_URL}/medicalStaff/updateGenericQuestion/id/${id}`, {\n         method: 'POST',\n         headers: headers,\n         body: JSON.stringify(data),\n     });\n\n     handleResponse(response, callback)\n }\n\nexport {\n    getAllGenericQuestions,\n    createGenericQuestion,\n    updateGenericQuestion,\n};\n","import React, { PureComponent } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { Button, ButtonToolbar } from \"reactstrap\";\n\nimport Sections from './components/Sections';\nimport { getAllPollTypes } from '../../../../services/polls';\n\nimport { getAllGenericQuestions } from \"../../../../services/genericQuestions\";\n\nclass PollForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      types: [],\n      sections: [],\n      sectionsCount: 0,\n      questionsCount: 0,\n      genericQuestionTypes: [],\n      isGeneralPollSelected: true\n    };\n\n    this.addSection = this.addSection.bind(this);\n    this.deleteSection = this.deleteSection.bind(this);\n    this.addQuestion = this.addQuestion.bind(this);\n    this.changeQuestion = this.changeQuestion.bind(this);\n    this.changeQuestionType = this.changeQuestionType.bind(this);\n    this.deleteQuestion = this.deleteQuestion.bind(this);\n\n    this.changeType = this.changeType.bind(this);\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n\n    getAllPollTypes((error, types) => {\n      if (error) {\n        console.log(error);\n        if (error.messageToClient === undefined) {\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\n        } else {\n          alert(error.messageToClient);\n        }\n\n      } else {\n        console.log(\"getAllPollTypes types = \", types);\n        this.setState({ types });\n      }\n    });\n\n    getAllGenericQuestions((errorMessage, genericQuestionTypes) => {\n          if (errorMessage) {\n            console.log(errorMessage);\n          } else {\n            this.setState({ genericQuestionTypes, mode: \"show\" });\n          }\n    });\n\n    if (data) {\n\n      const sectionsCount = data.pollSections.length;\n      const questionsCount = data.pollSections.map(s => s.questions.length).reduce((a, b) => a + b);\n\n      this.setState({ sectionsCount, questionsCount,\n                      sections: this.props.data.pollSections,\n                      isGeneralPollSelected: this.props.data.isGeneralPoll });\n\n      let temp = this.props.data.pollSections;\n      console.log(\"mark data = \", data);\n    }\n  }\n\n  addSection() {\n    const sections = [...this.state.sections];\n    const sectionsCount = this.state.sectionsCount + 1;\n\n    sections.push({ questions: [] });\n\n    this.setState({ sections, sectionsCount });\n  };\n\n  deleteSection(sectionIndex) {\n    const sections = [...this.state.sections];\n    const sectionsCount = this.state.sectionsCount - 1;\n\n    sections.splice(sectionIndex, 1);\n\n    this.setState({ sections, sectionsCount });\n  };\n\n  addQuestion(sectionIndex) {\n    const sections = [...this.state.sections];\n    const questionsCount = this.state.questionsCount + 1;\n\n    sections[sectionIndex].questions.push({ question: \"\", type: \"BOOLEAN\"  });\n\n    this.setState({ sections, questionsCount });\n  };\n\n  changeQuestion(sectionIndex, questionId, value) {\n    const sections = [...this.state.sections];\n    \n    sections[sectionIndex].questions[questionId].question = value;\n    this.setState({ sections });\n  }\n\n  changeQuestionType(sectionIndex, questionId, value) {\n    console.log(\"changeQuestionType - value = \", value);\n    const sections = [...this.state.sections];\n    \n    sections[sectionIndex].questions[questionId].type = value;\n    this.setState({ sections });\n  }\n\n  deleteQuestion(sectionIndex, questionIndex) {\n    const sections = [...this.state.sections]\n    const questionsCount = this.state.questionsCount - 1;\n\n    sections[sectionIndex].questions.splice(questionIndex, 1);\n\n    this.setState({ sections, questionsCount })\n  };\n\n  changeType(event) {\n    this.setState({ isGeneralPollSelected: event.target.value === \"GENERAL\" });\n  };\n\n  render() {\n    const { onSubmit, onReturn, data, mode } = this.props;\n    const { sectionsCount, questionsCount, sections, types, genericQuestionTypes, isGeneralPollSelected } = this.state;\n\n    const submitDisabled = sectionsCount > 0 && questionsCount > 0 ? false : true;\n\n    const subtypesComponent = types.map((type, index) => {\n      if (type.isGeneralPoll === isGeneralPollSelected) {\n        return (\n          <option\n            defaultValue={type.type}\n            key={`${type}_${index}`}\n            selected={data && data.type === type.type}\n            sub-type={type.isGeneralPoll ? \"isGeneralPoll\" : \"isMedicalPoll\"}>\n            {type.type}\n          </option>\n        );\n      }\n    });\n\n    return (\n      <div style={{ width: \"100%\" }}>\n        <Button\n          size=\"sm\" color=\"secondary\" onClick={onReturn} style={{ float: \"right\", marginLeft: \"10%\" }}>\n          לחזור לרשימת הסקרים\n        </Button>\n\n        <form className=\"form form--horizontal form__half\" onSubmit={onSubmit}>\n          <h4 className=\"wizard__title\"><b>\n            {mode === \"create\" && \"יצירת סקר\"}\n            {mode === \"edit\" && \"עדכון סקר\"}\n          </b></h4>\n\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\"><b>כותרת:</b></span>\n            <div className=\"form__form-group-field\">\n              <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"כותרת\" defaultValue={data && data.name} />\n            </div>\n          </div>\n\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\"><b>סוג:</b></span>\n            <div className=\"form__form-group-field\">\n              <select id=\"type\" name=\"type\" className=\"react-select\" onChange={this.changeType}>\n                <option value=\"GENERAL\">סקר כללי</option>\n                <option value=\"MEDICAL\" selected={isGeneralPollSelected === false}>שאלון רפואי</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\"><b>תת סוג:</b></span>\n            <div className=\"form__form-group-field\">\n              <select id=\"subtype\" name=\"subtype\" className=\"react-select\">\n                {subtypesComponent}\n              </select>\n            </div>\n          </div>\n\n          <Sections\n            sections={sections}\n            deleteSection={this.deleteSection}\n            addQuestion={this.addQuestion}\n            changeQuestion={this.changeQuestion}\n            changeQuestionType={this.changeQuestionType}\n            deleteQuestion={this.deleteQuestion}\n            genericQuestionTypes={genericQuestionTypes}\n            isGeneralPollTypeSelected={isGeneralPollSelected}\n          />\n\n          <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\n            <Button size=\"sm\" color=\"primary\" onClick={this.addSection}>הוספת סעיף חדש</Button>\n            <Button size=\"sm\" color=\"success\" type=\"submit\" disabled={submitDisabled}>\n              {mode === \"create\" && \"יצירת סקר\"}\n              {mode === \"edit\" && \"עדכון סקר\"}\n            </Button>\n          </ButtonToolbar>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(PollForm);\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Badge, Button, ButtonGroup, Progress } from \"reactstrap\";\n\nconst buildPollsColumns = (togglePoll, editPoll, showPollResults) => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true, width: \"10%\" },\n    {\n          name: \"סוג\",\n          sortable: true,\n          selector: \"isGeneralPoll\",\n          width: \"10%\",\n          cell: row => (\n            <h4>\n              {\n                row.isGeneralPoll === true &&\n                <Badge color=\"warning\" pill>סקר כללי</Badge>\n              }\n              {\n                row.isGeneralPoll === false &&\n                <Badge color=\"primary\" pill>שאלון רפואי</Badge>\n              }\n            </h4>\n          )\n        },\n    { name: \"תת סוג\", selector: \"type\", sortable: true },\n    { name: \"כותרת\", selector: \"name\", sortable: true },\n    {\n      name: \"סעיפים\",\n      width: \"5%\",\n      cell: row => row.pollSections.length\n    },\n    {\n      name: \"שאלות\",\n      width: \"10%\",\n      cell: row => {\n        return row.pollSections\n          .map(section => section.questions.length)\n          .reduce((a,b) => a + b, 0);\n      },\n    },\n    {\n      name: \"סטטוס\",\n      sortable: true,\n      selector: \"isActive\",\n      width: \"10%\",\n      cell: row => (\n        <h4>\n          {\n            row.isActive === true &&\n            <Badge color=\"success\" pill>פעיל</Badge>\n          }\n          {\n            row.isActive === false &&\n            <Badge color=\"secondary\" pill>לא פעיל</Badge>\n          }\n        </h4>\n      )\n    },\n    {\n      name: \"פעולות\",\n      width: \"15%\",\n      cell: row => (\n        <center>\n          <ButtonGroup className=\"btn-group--icons\">\n            { row.isActive === true &&\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => togglePoll(row.id)}>\n                <span className=\"lnr lnr-cross-circle\" data-tip=\"להפוך ללא פעיל\" />\n              </Button>\n            }\n            { row.isActive === false &&\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => togglePoll(row.id)}>\n                <span className=\"lnr lnr-chevron-right-circle\" data-tip=\"להפוך לפעיל\" />\n              </Button>\n            }\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => editPoll(row.id, row)}>\n                <span className=\"lnr lnr-pencil\" data-tip=\"ערוך סקר\" />\n              </Button>\n            }\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => showPollResults(row.id)}>\n                <span className=\"lnr lnr-list\" data-tip=\"תוצאות הסקר\" />\n              </Button>\n            }\n          </ButtonGroup>\n          <ReactTooltip />\n        </center>\n\n      )\n    }\n  ];\n};\n\nconst buildPollsTypesColumns = () => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true },\n    {\n          name: \"סוג\",\n          sortable: true,\n          selector: \"isGeneralPoll\",\n          cell: row => (\n            <h4>\n              {\n                row.isGeneralPoll === true &&\n                <Badge color=\"warning\" pill>General</Badge>\n              }\n              {\n                row.isGeneralPoll === false &&\n                <Badge color=\"primary\" pill>Medical</Badge>\n              }\n            </h4>\n          )\n    },\n    { name: \"תת סוג\", selector: \"type\", sortable: true }\n  ];\n};\n\nconst generalResultsColumns = () => {\n  return [\n    { name: \"#\", sortable: true, selector: \"questionId\", width: \"10%\" },\n    { name: \"שאלה\", selector: \"question\", sortable: true },\n    {\n      name: \"מספר מטופלים שענו\",\n      sortable: true,\n      selector: \"peopleAmount\",\n      width: \"15%\"\n    },\n    {\n      name: \"סוג\",\n      sortable: true,\n      selector: \"questionType\",\n      width: \"15%\",\n      cell: row => (\n        <h4>\n          {\n            row.questionType === \"BOOLEAN\" &&\n            <Badge color=\"warning\" pill>כן/לא</Badge>\n          }\n          {\n            row.questionType === \"TEXTUAL\" &&\n            <Badge color=\"warning\" pill>טקסט חופשי</Badge>\n          }\n          {\n            row.questionType === \"NUMERICAL\" &&\n            <Badge color=\"warning\" pill>דירוג מספרי 1-5</Badge>\n          }\n        </h4>\n      )\n    },\n    {\n      name: \"תוצאות\",\n      cell: row => (\n        <div style={{ width: \"100%\", textAlign: \"center\" }}>\n        {\n          row.positivePercentage && (\n            <div className=\"progress-wrap--middle progress-wrap--blue\">\n              <Progress value={row.positivePercentage * 100} style={{ height: 20}}>{row.positivePercentage * 100}% ענו בחיוב </Progress>\n            </div>\n          )\n        }\n        {\n          row.percentages && (\n            <div>\n              {\n                row.percentages.map((answers, index) => {\n                  return `דירוג ${index + 1}: ${answers * 100}%`;\n                }).join(\" | \")\n              }\n            </div>\n          )\n        }\n        { row.answers && (\n            <ButtonGroup className=\"btn-group--icons\">\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => alert(row.answers.join('\\n'))}>\n                <span className=\"lnr lnr-list\" data-tip=\"תשובות\" />\n              </Button>\n              <ReactTooltip />\n            </ButtonGroup>\n          )\n        }\n        </div>\n      )\n    }\n  ];\n};\n\nconst ExpanableMedicalResults = ({ data }) => {\n  const answers = data.pollResults.map((item, index) => {\n    let booleanAnswerDisplay = \"\";\n\n    if (item.answer === \"true\") {\n      booleanAnswerDisplay = \"כן\";\n    } else if (item.answer === \"false\") {\n      booleanAnswerDisplay = \"לא\";\n    }\n    const displayAnswer = booleanAnswerDisplay === \"\" ? item.answer : booleanAnswerDisplay\n\n    return (\n      <div key={index}  style={{ textAlign: \"right\" }}>\n        <p>\n          <b>שאלה {index + 1}:</b> {item.question}\n          <br />\n          <b>תשובה:</b> <span>{displayAnswer}</span>\n        </p>\n        <p></p>\n      </div>\n    );\n  });\n\n  return <ul className={`rtl-support`}>{answers}</ul>;\n};\n\nconst medicalResultsColumns = () => {\n  const columns = [\n    { name: \"מ״ס המטופל\", sortable: true, selector: \"userId\", width: \"47%\" },\n    { name: \"מ״ס טלפון\", sortable: true, selector: \"phoneNumber\", width: \"47%\" },\n  ];\n\n  return columns;\n};\n\nexport {\n  buildPollsColumns,\n  buildPollsTypesColumns,\n  generalResultsColumns,\n  medicalResultsColumns,\n  ExpanableMedicalResults,\n};\n","const serializeNewPoll = (formData, isActive) => {\n  const data = { pollSections: [], isGeneralPoll: true, isActive: isActive };\n\n  for (let i = 0; i < formData.length; i++) {\n    const { id, value, nodeName, selectedOptions } = formData[i];\n    console.log(\"formData = id = \",id, \", value = \",value,\", nodeName = \",nodeName);\n    switch (nodeName) {\n      case \"INPUT\":\n        if (id === \"name\")  {\n          data.name = value;\n        }\n        if (id.startsWith(\"question\")) {\n          const sectionId = id.split(\"_\")[1];\n\n          if (!data.pollSections[sectionId]) {\n            data.pollSections.push({ name: \"\", questions: [] });\n          }\n          data.pollSections[sectionId].questions.push({ name: \"\", question: value });\n        } else if (id.startsWith(\"section_name\")) {\n            const sectionId = id.split(\"_\")[2];\n\n            if (!data.pollSections[sectionId]) {\n                data.pollSections.push({ name: value, questions: [] });\n            } else {\n                data.pollSections[sectionId].name = value;\n            }\n        }\n        break\n\n      case \"SELECT\":\n        if (id === \"subtype\") {\n          data.type = value;\n          data.isGeneralPoll = selectedOptions[0].attributes[\"sub-type\"].value === \"isGeneralPoll\" ? true : false;\n        } else if (id.startsWith(\"question\")) {\n          const sectionId = id.split(\"_\")[1];\n          const questionId = id.split(\"_\")[2];\n\n          const type = value.split(\"_\")[0];\n          const typeName = value.split(\"_\")[1];\n\n          data.pollSections[sectionId].questions[questionId].type = type;\n          data.pollSections[sectionId].questions[questionId].name = typeName;\n        }\n        break\n\n      default:\n        console.log(\"is not input field\");\n    }\n  };\n\n  console.log(data.pollSections[0].questions);\n  return data;\n};\n\nexport { serializeNewPoll };\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Col, Row, Card, CardBody, Button, Container } from \"reactstrap\";\r\n\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport PollForm from \"./forms/PollForm\";\r\nimport { buildPollsColumns } from \"./tables/columns\";\r\n\r\nimport { serializeNewPoll } from \"./serializers\";\r\nimport {\r\n  createPoll, editPoll, getAllPolls, togglePollActivity\r\n} from \"../../../services/polls\";\r\n\r\nclass Polls extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { pollId: null, pollData: null, mode: \"show\", polls: [] };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.results = this.results.bind(this);\r\n\r\n    this.select = this.select.bind(this);\r\n    this.create = this.create.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllPolls((error, polls) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ polls });\r\n      }\r\n    });\r\n  }\r\n\r\n  toggle(pollId) {\r\n    togglePollActivity(pollId, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        getAllPolls((error, polls) => {\r\n          if (error) {\r\n            console.log(error);\r\n            if (error.messageToClient === undefined) {\r\n              alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n            } else {\r\n              alert(error.messageToClient);\r\n            }\r\n\r\n          } else {\r\n            this.setState({ polls });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  results(pollId) {\r\n    const poll = this.state.polls.map(poll => pollId === poll.id ? poll : false).filter(i => i)[0];\r\n\r\n    this.props.history.push(`/dash/polls/results/${poll.isGeneralPoll ? \"general\" : \"medical\"}/${pollId}/${poll.name}`);\r\n  };\r\n\r\n  select(pollId, pollData) {\r\n    this.setState({ mode: \"edit\", pollId, pollData })\r\n  };\r\n\r\n  async edit(event) {\r\n    event.preventDefault();\r\n    const serialized = serializeNewPoll(event.target.elements, this.state.pollData.isActive);\r\n\r\n    await editPoll(this.state.pollId, serialized, error => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    await getAllPolls((error, polls) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ polls, mode: \"show\" });\r\n      }\r\n    });\r\n\r\n    this.setState();\r\n  }\r\n\r\n  async create(event) {\r\n    event.preventDefault();\r\n    const serialized = serializeNewPoll(event.target.elements);\r\n\r\n    await createPoll(serialized, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    await getAllPolls((error, polls) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ polls, mode: \"show\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { mode, polls, pollData } = this.state;\r\n    const columns = buildPollsColumns(this.toggle, this.select, this.results);\r\n\r\n    if (!localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} xl={12}>\r\n            <Card>\r\n              <CardBody>\r\n\r\n                { mode === \"create\" && (\r\n                  <div className=\"wizard\">\r\n                    <div className=\"wizard__form-wrapper\">\r\n                      <PollForm onSubmit={this.create} mode={mode} onReturn={() => this.setState({ mode: \"show\" })} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {\r\n                  mode === \"edit\" && pollData && (\r\n                  <div className=\"wizard\">\r\n                    <div className=\"wizard__form-wrapper\">\r\n                      <PollForm data={pollData} mode={mode} onSubmit={this.edit} onReturn={() => this.setState({ mode: \"show\" })} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                { mode === \"show\" && (\r\n                  <div>\r\n                    <h4 className=\"bold-text\">רשימת הסקרים</h4>\r\n                    <div className=\"card__title\">\r\n                      <Button size=\"sm\" color=\"primary\" onClick={() => this.setState({ mode: \"create\" })}>יצירת סקר חדש</Button>\r\n                    </div>\r\n                    <DataTable\r\n                      data={polls}\r\n                      columns={columns}\r\n                      pagination={true}\r\n                      defaultSortAsc={false}\r\n                      defaultSortField={\"id\"}\r\n                      className=\"table-responsive table--bordered\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Polls);\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Col, Row, Card, CardBody, Container } from 'reactstrap';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { getGeneralPollResultsById, getMedicalPollResultsById } from '../../../services/polls';\r\nimport { generalResultsColumns, medicalResultsColumns, ExpanableMedicalResults } from './tables/columns';\r\n\r\nclass PollsRersults extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isGeneral: null, results: [], name: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pollName = this.props.match.params.pollName;\r\n    if (this.props.match.params.pollSubType === \"general\") {\r\n      getGeneralPollResultsById(this.props.match.params.pollId, (error, results) => {\r\n        if (error) {\r\n          console.log(error);\r\n          if (error.messageToClient === undefined) {\r\n            alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n          } else {\r\n            alert(error.messageToClient);\r\n          }\r\n\r\n        } else {\r\n          this.setState({ isGeneral: true, results: results.pollResults, name: pollName });\r\n        }\r\n      });\r\n    } else if (this.props.match.params.pollSubType === \"medical\") {\r\n      getMedicalPollResultsById(this.props.match.params.pollId, (error, results) => {\r\n        if (error) {\r\n          console.log(error);\r\n          if (error.messageToClient === undefined) {\r\n            alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n          } else {\r\n            alert(error.messageToClient);\r\n          }\r\n\r\n        } else {\r\n          this.setState({ isGeneral: false, results: results, name: pollName });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results, isGeneral, name } = this.state;\r\n\r\n    if (!localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} xl={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <h4 className=\"bold-text\">תוצאות הסקר - \"{name}\"</h4>\r\n                { isGeneral &&\r\n                  <DataTable\r\n                    data={results}\r\n                    pagination={true}\r\n                    columns={generalResultsColumns()}\r\n                    defaultSortField={\"questionId\"}\r\n                    className=\"table-responsive table--bordered\"\r\n                  />\r\n                }\r\n                { !isGeneral &&\r\n                  <DataTable\r\n                    data={results}\r\n                    pagination={true}\r\n                    expandableRows={true}\r\n                    expandableRowsComponent={<ExpanableMedicalResults />}\r\n                    columns={medicalResultsColumns()}\r\n                    className=\"table-responsive table--bordered\"\r\n                  />\r\n                }\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PollsRersults);\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Card, CardBody, Button, Container } from 'reactstrap';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { buildPollsTypesColumns } from './tables/columns';\r\nimport { getAllPollTypes } from '../../../services/polls';\r\n\r\nclass Polls extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { pollsTypes: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllPollTypes((error, pollsTypes) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ pollsTypes });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { pollsTypes } = this.state;\r\n    const pollsTypesColumns = buildPollsTypesColumns();\r\n\r\n    if (!localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} xl={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <h4 className=\"bold-text\">רשימת סוגי הסקרים</h4>\r\n                <div className=\"card__title\">\r\n                  <Link to={\"/dash/polls/types/create\"}>\r\n                    <Button size=\"sm\" color=\"primary\">יצירת סוג סקר חדש</Button>\r\n                  </Link>\r\n                </div>\r\n                <DataTable\r\n                  data={pollsTypes}\r\n                  columns={pollsTypesColumns}\r\n                  pagination={true}\r\n                  className=\"table-responsive table--bordered\"\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Polls;\r\n","import React, { PureComponent } from \"react\";\nimport { Button, ButtonToolbar } from \"reactstrap\";\n\nclass NewPollForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", subType: \"General\" };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTitleChange = this.onTitleChange.bind(this);\n    this.onSubTypeChange = this.onSubTypeChange.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.title, this.state.subType);\n  }\n\n  onTitleChange({ target }) {\n    this.setState({ title: target.value });\n  }\n\n  onSubTypeChange({ target }) {\n    this.setState({ subType: target.value });\n  }\n\n  render() {\n    const { title } = this.state;\n\n    const submitDisabled = title !== \"\" ? false : true;\n\n    return (\n      <form className=\"form form--horizontal form__half\" onSubmit={this.onSubmit}>\n        <h4 className=\"wizard__title\"><b>סוג סקר חדש</b></h4>\n\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\"><b>סוג:</b></span>\n          <div className=\"form__form-group-field\">\n            <select id=\"type\" name=\"type\" className=\"react-select\" onChange={this.onSubTypeChange}>\n              <option value=\"General\">General</option>\n              <option value=\"Medical\">Medical</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\"><b>תת סוג:</b></span>\n          <div className=\"form__form-group-field\">\n            <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"כותרת\" onChange={this.onTitleChange} />\n          </div>\n        </div>\n\n        <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\n          <Button size=\"sm\" color=\"primary\" type=\"submit\" disabled={submitDisabled}>שמירה</Button>\n        </ButtonToolbar>\n      </form>\n    );\n  }\n}\n\nexport default NewPollForm;\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Col, Row, Card, CardBody, Container } from \"reactstrap\";\r\n\r\nimport PollTypeForm from \"./forms/PollTypeForm\";\r\nimport { createPollType } from \"../../../services/polls\";\r\n\r\nclass PollsTypeCreate extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { pollsTypes: [] };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(title, subType) {\r\n    const data = { type: title, isGeneralPoll: subType === \"General\" };\r\n\r\n    createPollType(data, (error, newPollType) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.props.history.push('/dash/polls/types');\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (!localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} xl={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <div className=\"wizard\">\r\n                  <div className=\"wizard__form-wrapper\">\r\n                    <PollTypeForm onSubmit={this.onSubmit} />\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PollsTypeCreate);\r\n","const serializeNewGenericQuestion = (formData, isActive) => {\n  const data = { name: \"\", answers: [] };\n\n  for (let i = 0; i < formData.length; i++) {\n    const { id, value, nodeName } = formData[i];\n\n    switch (nodeName) {\n      case \"INPUT\":\n        if (id === \"name\")  {\n          data.name = value;\n        }\n        if (id.startsWith(\"questionDescription_\")) {\n          const questionIndex = id.split(\"_\")[1];\n          const questionDescription = value;\n\n          data.answers[questionIndex] = questionDescription;\n        }\n        break\n\n      default:\n        console.log(\"is not input field\");\n    }\n  };\n\n  return data;\n};\n\nexport { serializeNewGenericQuestion };\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\n\nconst Questions = ({\n  deleteQuestion, answersData, addQuestion, changeQuestionDescription\n}) => {\n\n  const components = answersData.map(\n    ( answer, questionIndex) => {\n      const questionId = `question_${questionIndex}`;\n\n      return (\n        <div key={questionId} className=\"form__form-group\" style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n          <div className=\"form__form-group-field\" style={{ height: 34 }}>\n            <input\n              type=\"text\"\n              value={answer}\n              component=\"input\"\n              placeholder=\"תשובה אפשרית...\"\n              id={`questionDescription_${questionIndex}`}\n              onChange={({ target }) => changeQuestionDescription(questionIndex, target.value)}\n            />\n          </div>\n\n          <br/><br/><br/>\n          <div className=\"form__form-group-field\">\n            <Button\n              size=\"sm\"\n              color=\"danger\"\n              onClick={() => deleteQuestion(questionIndex)}>\n              מחיקת תשובה אפשרית\n            </Button>\n          </div>\n        </div>\n      )\n    }\n  ).filter(component => component);\n\n  return components;\n}\n\nexport default Questions;\n","import React, { PureComponent } from \"react\";\nimport { Button, ButtonToolbar } from \"reactstrap\";\nimport { reduxForm } from 'redux-form';\nimport Questions from './components/Questions';\n\n// {\n//   \"answers\": [\n//     \"string\"\n//   ],\n//   \"id\": 0,\n//   \"name\": \"string\"\n// }\n\nclass GenericQuestionsForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n        name: \"\",\n        answers: [],\n        answersCount: 0,\n        mode: \"show\"\n    };\n\n    this.addGenericQuestion = this.addGenericQuestion.bind(this)\n    this.changeName = this.changeName.bind(this)\n    this.deleteQuestion = this.deleteQuestion.bind(this)\n    this.changeQuestionDescription = this.changeQuestionDescription.bind(this)\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n\n    if (data) {\n        const name = data.name;\n        const answers = this.props.data.answers;\n        const answersCount = answers.length;\n\n        this.setState({ name, answers, answersCount });\n    }\n  };\n\n  addGenericQuestion() {\n    const answers = [...this.state.answers];\n    const answersCount = this.state.answersCount + 1;\n\n    answers[answersCount - 1]= \"\";\n\n    this.setState({ answers, answersCount });\n  }\n\n  changeName(name) {\n      this.setState({ name })\n  }\n\n  changeQuestionDescription(questionIndex, value) {\n    const answers = [...this.state.answers];\n    answers[questionIndex] = value;\n\n    this.setState({ answers });\n  }\n\n  deleteQuestion(questionIndex) {\n    const answers = [...this.state.answers];\n    const answersCount = this.state.answersCount - 1;\n\n    answers.splice(questionIndex, 1);\n    this.setState({ answers, answersCount });\n  }\n\n  render() {\n    const { name, answers } = this.state;\n    const { onSubmit, onReturn, data, mode } = this.props;\n\n    const submitDisabled = name !== \"\" ? false : true;\n\n    return (\n    <div>\n      <Button\n          size=\"sm\" color=\"secondary\" onClick={onReturn} style={{ float: \"right\", marginLeft: \"10%\" }}>\n          לחזור לרשימת השאלות הגנריות\n      </Button>\n\n      <form className=\"form form--horizontal form__half\" onSubmit={onSubmit}>\n        <h4 className=\"wizard__title\">\n          <b>\n            {mode === \"create\" && \"יצירת שאלה גנרית חדשה\"}\n            {mode === \"edit\" && \"עדכון שאלה גנרית\"}\n          </b>\n        </h4>\n\n        <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\"><b>סוג השאלה:</b></span>\n            <div className=\"form__form-group-field\">\n              <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"סוג השאלה\" defaultValue={data && data.name}\n                  onChange={({ target }) => this.changeName(target.value)} />\n            </div>\n        </div>\n\n        <Questions\n            answersData={answers}\n            deleteQuestion={e => this.deleteQuestion(e)}\n            changeQuestionDescription={(index, value) => { this.changeQuestionDescription(index, value)} }\n           />\n\n         <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\n             <Button size=\"sm\" color=\"primary\" onClick={e => this.addGenericQuestion()}>הוספת תשובה אפשרית</Button>\n             <Button size=\"sm\" color=\"success\" type=\"submit\" disabled={submitDisabled}>\n               {mode === \"create\" && \"יצירת שאלה גנרית\"}\n               {mode === \"edit\" && \"עדכון שאלה גנרית\"}\n             </Button>\n          </ButtonToolbar>\n      </form>\n    </div>\n    );\n  }\n}\n\nexport default reduxForm({ form: 'generic_questions_form'})(GenericQuestionsForm);\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from \"react\";\r\n\r\nimport { Col, Row, Card, CardBody, Button, Container } from \"reactstrap\";\r\n\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport { buildGenericQuestionTypesColumns } from \"./tables/columns\";\r\n\r\nimport { serializeNewGenericQuestion } from \"./serializers\";\r\n\r\nimport GenericQuestionsForm from \"./forms/GenericQuestionsForm\";\r\n\r\nimport {\r\n      getAllGenericQuestions,\r\n      createGenericQuestion,\r\n      updateGenericQuestion,\r\n} from \"../../../services/genericQuestions\";\r\n\r\n\r\nclass GenericQuestionTypes extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    genericQuestionTypes: [],\r\n    mode: \"show\",\r\n    genericQuestionId: null ,\r\n    genericQuestionData: null\r\n    };\r\n\r\n    this.select = this.select.bind(this);\r\n    this.create = this.create.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.fetchTypes = this.fetchTypes.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchTypes();\r\n  };\r\n\r\n  fetchTypes() {\r\n    getAllGenericQuestions((errorMessage, genericQuestionTypes) => {\r\n      if (errorMessage) {\r\n        console.log(errorMessage);\r\n      } else {\r\n        this.setState({ genericQuestionTypes, mode: \"show\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  select(genericQuestionId, genericQuestionData) {\r\n    this.setState({ mode: \"edit\", genericQuestionId, genericQuestionData })\r\n  };\r\n\r\n  async create(event) {\r\n    event.preventDefault();\r\n    const serialized = serializeNewGenericQuestion(event.target.elements);\r\n\r\n    await createGenericQuestion(serialized, error => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    this.fetchTypes()\r\n  }\r\n\r\n  async edit(event) {\r\n      event.preventDefault();\r\n      const serialized = serializeNewGenericQuestion(event.target.elements)\r\n\r\n      await updateGenericQuestion(this.state.genericQuestionId, serialized, (error) => {\r\n        if (error) {\r\n          console.log(error);\r\n          if (error.messageToClient === undefined) {\r\n            alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n          } else {\r\n            alert(error.messageToClient);\r\n          }\r\n\r\n        } else {\r\n          this.fetchTypes()\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { mode, genericQuestionTypes, genericQuestionData } = this.state;\r\n    const genericQuestionTypesColumns = buildGenericQuestionTypesColumns(this.select);\r\n\r\n    if (!localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n    <Container className=\"dashboard\">\r\n      <Row>\r\n        <Col xs={12} md={12} lg={12} xl={12}>\r\n          <Card>\r\n            <CardBody>\r\n\r\n              { mode === \"create\" && (\r\n                <div className=\"wizard\">\r\n                  <div className=\"wizard__form-wrapper\">\r\n                    <GenericQuestionsForm onSubmit={this.create} mode={mode} onReturn={() => { this.setState({ mode: \"show\" })} }/>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {\r\n                mode === \"edit\" && genericQuestionData && (\r\n                <div className=\"wizard\">\r\n                  <div className=\"wizard__form-wrapper\">\r\n                    <GenericQuestionsForm data={genericQuestionData} mode={mode} onSubmit={this.edit} onReturn={() => this.setState({ mode: \"show\" })} />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              { mode === \"show\" && (\r\n                <div>\r\n                  <h4 className=\"bold-text\">רשימת שאלות גנריות</h4>\r\n                  <div className=\"card__title\">\r\n                    <Button size=\"sm\" color=\"primary\" onClick={() => this.setState({ mode: \"create\" })}>יצירת שאלה גנרית חדש</Button>\r\n                  </div>\r\n                  <DataTable\r\n                    data={genericQuestionTypes}\r\n                    columns={genericQuestionTypesColumns}\r\n                    pagination={true}\r\n                    defaultSortAsc={false}\r\n                    defaultSortField={\"id\"}\r\n                    className=\"table-responsive table--bordered\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenericQuestionTypes;\r\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nconst buildGenericQuestionTypesColumns = (editGenericQuestion) => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true },\n    { name: \"סוג השאלה\", selector: \"name\", sortable: true },\n    {\n          name: \"פעולות\",\n          width: \"15%\",\n          cell: row => (\n            <center>\n              <ButtonGroup className=\"btn-group--icons\">\n                {\n                  <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => editGenericQuestion(row.id, row)}>\n                    <span className=\"lnr lnr-pencil\" data-tip=\"עריכת שאלה\" />\n                  </Button>\n                }\n              </ButtonGroup>\n              <ReactTooltip />\n            </center>\n          )\n        }\n  ];\n};\n\nexport {\n  buildGenericQuestionTypesColumns\n};\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TimePicker from 'rc-time-picker';\r\nimport AvTimerIcon from 'mdi-react/AvTimerIcon';\r\nimport classNames from 'classnames';\r\n\r\nclass TimePickerField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    timeMode: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  state = {\r\n    open: false,\r\n    time: this.props.time,\r\n    name: this.props.name,\r\n    onChange: this.props.onChange,\r\n  };\r\n\r\n  setOpen = ({ open }) => {\r\n    this.setState({ open });\r\n  };\r\n\r\n  toggleOpen = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      open: !this.state.open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { timeMode } = this.props;\r\n    const { time, name, onChange } = this.state;\r\n    const btnClass = classNames({\r\n      'form__form-group-button': true,\r\n      active: this.state.open,\r\n    });\r\n\r\n    return (\r\n      <div className=\"form__form-group-field\">\r\n        <TimePicker\r\n          open={this.state.open}\r\n          onOpen={this.setOpen}\r\n          onClose={this.setOpen}\r\n          name={name}\r\n          onChange={onChange}\r\n          showSecond={false}\r\n          use12Hours={timeMode}\r\n          defaultValue={time}\r\n        />\r\n        <button className={btnClass} onClick={this.toggleOpen}>\r\n          <AvTimerIcon />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderTimePickerField = props => (\r\n  <TimePickerField\r\n    {...props.input}\r\n    timeMode={props.timeMode}\r\n    time={props.defaultValue}\r\n    name={props.name}\r\n    onChange={props.onChange}\r\n  />\r\n);\r\n\r\nrenderTimePickerField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n  }),\r\n  timeMode: PropTypes.bool,\r\n};\r\n\r\nrenderTimePickerField.defaultProps = {\r\n  timeMode: false,\r\n};\r\n\r\nexport default renderTimePickerField;\r\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport Moment from \"moment\";\nimport TimePicker from '../../../../../shared/components/form/TimePicker';\n\nconst Activities = ({\n  isWeekDay, deleteActivity, activities, addActivity, changeActivityDescription, changeTime\n}) => {\n  const components = activities.map(\n    ({ activityDescription, startTime, endTime }, activityIndex) => {\n      const activityId = `activity_${activityIndex}`;\n      const timeFormat = 'HH:mm';\n      const activityType = isWeekDay ? \"weekdayActivities\" : \"weekendActivities\";\n\n      return (\n        <div key={activityId} className=\"form__form-group\" style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n          <div className=\"form__form-group-field\" style={{ height: 34 }}>\n            <input\n              type=\"text\"\n              value={activityDescription}\n              component=\"input\"\n              placeholder=\"תיאור פעילות...\"\n              id={`activityDescription_${activityType}_${activityIndex}`}\n              name={`activityDescription_${activityType}_${activityIndex}`}\n              onChange={({ target }) => changeActivityDescription(activityIndex, target.value)}\n            />\n          </div>\n\n          <div className=\"form__form-group-field\" style={{ height: 34}}>\n              <span className=\"form__form-group-label\"><b>שעת התחלה:</b></span>\n              <div className=\"form__form-group-field\" style={{ width: 300}}>\n                 <TimePicker\n                    name={`activityTime_Start_${activityType}_${activityIndex}`}\n                    onChange={( target ) => changeTime(true, activityIndex, Moment(target).format(timeFormat))}\n                    defaultValue={Moment(startTime, 'HH:mm')}\n                  />\n              </div>\n          </div>\n\n          <div className=\"form__form-group-field\" style={{ height: 34}}>\n               <span className=\"form__form-group-label\"><b>שעת סיום:</b></span>\n               <div className=\"form__form-group-field\" style={{ width: 300}}>\n                  <TimePicker\n                    name={`activityTime_End_${activityType}_${activityIndex}`}\n                    onChange={( target ) => changeTime(false, activityIndex, Moment(target).format(timeFormat))}\n                    defaultValue={Moment(endTime, 'HH:mm')}\n                  />\n               </div>\n          </div>\n\n          <br/><br/><br/>\n          <div className=\"form__form-group-field\">\n            <Button\n              size=\"sm\"\n              color=\"danger\"\n              onClick={() => deleteActivity(activityIndex)}\n            >\n              מחיקת פעילות\n            </Button>\n          </div>\n        </div>\n      )\n    }\n  ).filter(component => component);\n\n  return components;\n}\n\nexport default Activities;\n","import React, { PureComponent } from \"react\";\nimport { Button, ButtonToolbar } from \"reactstrap\";\nimport { reduxForm } from 'redux-form';\nimport Activities from './components/Activities';\n\nconst isWeekDay = true\n\nclass RoutinesForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n        name: \"\",\n        weekdayActivities: [], weekdayActivitiesCount: 0,\n        weekendActivities: [], weekendActivitiesCount: 0,\n        mode: \"show\"\n    };\n\n    this.addActivity = this.addActivity.bind(this)\n    this.deleteActivity = this.deleteActivity.bind(this)\n    this.changeActivityDescription = this.changeActivityDescription.bind(this)\n    this.changeTime = this.changeTime.bind(this)\n    this.changeName = this.changeName.bind(this)\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n\n    if (data) {\n        const name = data.name;\n\n        const weekdayActivities = this.props.data.weekdayActivities;//data.weekdayActivities;\n        const weekdayActivitiesCount = weekdayActivities.length;\n\n        const weekendActivities = data.weekendActivities;\n        const weekendActivitiesCount = weekendActivities.length;\n        this.setState({ name, weekdayActivities, weekdayActivitiesCount, weekendActivities, weekendActivitiesCount });\n    }\n  };\n\n  changeName(name) {\n    this.setState({ name })\n  }\n\n  addActivity(isWeekDay) {\n    if (isWeekDay) {\n        const weekdayActivities = [...this.state.weekdayActivities];\n        const weekdayActivitiesCount = this.state.weekdayActivitiesCount + 1;\n\n        weekdayActivities.push({ activityDescription: \"\", startTime: \"00:00\", endTime: \"00:00\" });\n\n        this.setState({ weekdayActivities, weekdayActivitiesCount });\n    } else {\n        const weekendActivities = [...this.state.weekendActivities];\n        const weekendActivitiesCount = this.state.weekendActivitiesCount + 1;\n\n        weekendActivities.push({ activityDescription: \"\", startTime: \"00:00\", endTime: \"00:00\" });\n\n        this.setState({ weekendActivities, weekendActivitiesCount });\n    }\n  }\n\n  deleteActivity(isWeekDay, activityIndex) {\n    if (isWeekDay) {\n      const weekdayActivities = [...this.state.weekdayActivities];\n      const weekdayActivitiesCount = this.state.weekdayActivitiesCount - 1;\n\n      weekdayActivities.splice(activityIndex, 1);\n\n      this.setState({ weekdayActivities, weekdayActivitiesCount });\n    } else {\n      const weekendActivities = [...this.state.weekendActivities];\n      const weekendActivitiesCount = this.state.weekendActivitiesCount - 1;\n\n      weekendActivities.splice(activityIndex, 1);\n\n      this.setState({ weekendActivities, weekendActivitiesCount });\n    }\n  }\n\n  changeActivityDescription(isWeekDay, activityIndex, value) {\n    if (isWeekDay) {\n       const weekdayActivities = [...this.state.weekdayActivities];\n       weekdayActivities[activityIndex].activityDescription = value;\n\n       this.setState({ weekdayActivities })\n    } else {\n       const weekendActivities = [...this.state.weekendActivities];\n       weekendActivities[activityIndex].activityDescription = value;\n\n       this.setState({ weekendActivities })\n    }\n  }\n\n  changeTime(isWeekDay, isStartTime, activityIndex, value) {\n    if (isWeekDay) {\n      const weekdayActivities = [...this.state.weekdayActivities]\n      if (isStartTime) {\n        weekdayActivities[activityIndex].startTime = value\n      } else {\n        weekdayActivities[activityIndex].endTime = value\n      }\n      this.setState({ weekdayActivities })\n    } else {\n      const weekendActivities = [...this.state.weekendActivities]\n      if (isStartTime) {\n        weekendActivities[activityIndex].startTime = value\n      } else {\n        weekendActivities[activityIndex].endTime = value\n      }\n      this.setState({ weekendActivities })\n    }\n  }\n\n  render() {\n    const { name, weekdayActivities, weekendActivities } = this.state;\n    const { onSubmit, onReturn, data, mode } = this.props;\n\n    const submitDisabled = name !== \"\" ? false : true;\n\n    return (\n    <div>\n      <Button\n          size=\"sm\" color=\"secondary\" onClick={onReturn} style={{ float: \"right\", marginLeft: \"10%\" }}>\n          לחזור לרשימת סדרי יום\n      </Button>\n\n      <form className=\"form form--horizontal form__half\" onSubmit={onSubmit}>\n        <h4 className=\"wizard__title\"><b>סדר יום מטופל</b></h4>\n\n        <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\"><b>כותרת:</b></span>\n            <div className=\"form__form-group-field\">\n              <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"כותרת\" defaultValue={data && data.name}\n                  onChange={({ target }) => this.changeName(target.value)} />\n            </div>\n        </div>\n\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\"><b>סוג:</b></span>\n          <div className=\"form__form-group-field\">\n            <span className=\"form__form-group-label\"><b>פעילויות יום חול</b></span>\n          </div>\n        </div>\n\n        <Activities\n            isWeekDay={isWeekDay}\n            activities={weekdayActivities}\n            deleteActivity={e => this.deleteActivity(isWeekDay, e)}\n            changeActivityDescription={(isStartTime, index, value) => { this.changeActivityDescription(isWeekDay, isStartTime, index, value)} }\n            changeTime={(isStartTime, index, value) => this.changeTime(isWeekDay, isStartTime, index, value)}\n           />\n\n        <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\n            <Button size=\"sm\" color=\"primary\" onClick={e => this.addActivity(isWeekDay)}>הוספת פעילות יום חול</Button>\n         </ButtonToolbar>\n\n         <div className=\"form__form-group\">\n           <span className=\"form__form-group-label\"><b>סוג:</b></span>\n           <div className=\"form__form-group-field\">\n             <span className=\"form__form-group-label\"><b>פעילויות סוף שבוע</b></span>\n           </div>\n         </div>\n\n         <Activities\n           isWeekDay={!isWeekDay}\n           activities={weekendActivities}\n           deleteActivity={e => this.deleteActivity(!isWeekDay, e)}\n           changeActivityDescription={(isStartTime, index, value) => this.changeActivityDescription(!isWeekDay, isStartTime, index, value)}\n           changeTime={(isStartTime, index, value) => this.changeTime(!isWeekDay, isStartTime, index, value)}\n         />\n\n         <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\n             <Button size=\"sm\" color=\"primary\" onClick={e => this.addActivity(!isWeekDay)}>הוספת פעילות סוף שבוע</Button>\n             <Button size=\"sm\" color=\"success\" type=\"submit\" disabled={submitDisabled}>\n               {mode === \"create\" && \"יצירת סדר יום\"}\n               {mode === \"edit\" && \"עדכון סדר יום\"}\n             </Button>\n          </ButtonToolbar>\n      </form>\n    </div>\n    );\n  }\n}\n\nexport default reduxForm({ form: 'routines_form'})(RoutinesForm);\n","const serializeNewRoutine = (formData, isActive) => {\n  const data = { name: \"\", weekdayActivities: [], weekendActivities: [], isActive: isActive };\n\n  for (let i = 0; i < formData.length; i++) {\n    const { id, value, nodeName, selectedOptions, name } = formData[i];\n\n    switch (nodeName) {\n      case \"INPUT\":\n        if (id === \"name\")  {\n          data.name = value;\n        }\n        if (id.startsWith(\"activityDescription\")) {\n          const activityType = id.split(\"_\")[1];\n          const activityIndex = id.split(\"_\")[2];\n          const activityDescription = value;\n\n          if (activityType === \"weekdayActivities\") {\n            if (!data.weekdayActivities[activityIndex]) {\n              data.weekdayActivities.push({ activityDescription: activityDescription, startTime: \"\", endTime: \"\" });\n            } else {\n              data.weekdayActivities[activityIndex].activityDescription = activityDescription;\n            }\n          } else {\n            // type = weekendActivities\n            if (!data.weekendActivities[activityIndex]) {\n              data.weekendActivities.push({ activityDescription: activityDescription, startTime: \"\", endTime: \"\" });\n            } else {\n              data.weekendActivities[activityIndex].activityDescription = activityDescription;\n            }\n          }\n        } else if (name.startsWith(\"activityTime\")) {\n            const isStartTime = name.split(\"_\")[1];\n            const activityType = name.split(\"_\")[2];\n            const activityIndex = name.split(\"_\")[3];\n            const activityTime = value;\n\n            if (activityType === \"weekdayActivities\") {\n              if (isStartTime === \"Start\") {\n                if (!data.weekdayActivities[activityIndex]) {\n                  data.weekdayActivities.push({ activityDescription: \"\", startTime: activityTime, endTime: \"\"});\n                } else {\n                  data.weekdayActivities[activityIndex].startTime = activityTime;\n                }\n              } else {\n                // isEndTime\n                if (!data.weekdayActivities[activityIndex]) {\n                  data.weekdayActivities.push({ activityDescription: \"\", startTime: \"\", endTime: activityTime});\n                } else {\n                  data.weekdayActivities[activityIndex].endTime = activityTime;\n                }\n              }\n            } else {\n              // weekendActivities\n              if (isStartTime === \"Start\") {\n                if (!data.weekendActivities[activityIndex]) {\n                  data.weekendActivities.push({ activityDescription: \"\", startTime: activityTime, endTime: \"\"});\n                } else {\n                  data.weekendActivities[activityIndex].startTime = activityTime;\n                }\n              } else {\n                // isEndTime\n                if (!data.weekendActivities[activityIndex]) {\n                  data.weekendActivities.push({ activityDescription: \"\", startTime: \"\", endTime: activityTime});\n                } else {\n                  data.weekendActivities[activityIndex].endTime = activityTime;\n                }\n              }\n            }\n        }\n        break\n\n      case \"SELECT\":\n        if (id === \"type\") {\n          data.type = value;\n          data.isGeneralPoll = selectedOptions[0].attributes[\"sub-type\"].value === \"isGeneralPoll\" ? true : false;\n        } else if (id.startsWith(\"question\")) {\n          const sectionId = id.split(\"_\")[1];\n          const questionId = id.split(\"_\")[2];\n\n          data.pollSections[sectionId].questions[questionId].type = value;\n        }\n        break\n\n      default:\n        console.log(\"is not input field\");\n    }\n  };\n\n  return data;\n};\n\nexport { serializeNewRoutine };\n","const { handleResponse } = require('../utilities/express/response');\n\nconst API_PORT = process.env.REACT_APP_API_PORT || '2304';\nconst API_HOST = process.env.REACT_APP_API_HOST || 'http://23.21.185.104';\nconst API_URL = `${API_HOST}:${API_PORT}`;\n\nconst headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\n\n const createDailyRoutine = async (data, callback) => {\n    const response = await fetch(`${API_URL}/medicalStaff/createDailyRoutine`, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(data),\n    });\n\n    handleResponse(response, callback);\n }\n\n const getAllDailyRoutines = async (callback) => {\n      const response = await fetch(`${API_URL}/medicalStaff/getAllDailyRoutines`, { method: 'GET' });\n\n      handleResponse(response, callback);\n }\n\n const updateDailyRoutineById = async (id, data, callback) => {\n     const response = await fetch(`${API_URL}/medicalStaff/updateDailyRoutine/id/${id}`, {\n         method: 'POST',\n         headers: headers,\n         body: JSON.stringify(data),\n     });\n\n     handleResponse(response, callback);\n  }\n\n  const toggleRoutineActivity = async (pollId, callback) => {\n    const response = await fetch(`${API_URL}/medicalStaff/toggleDailyRoutineActivity/id/${pollId}`, { method: 'GET' });\n\n    handleResponse(response, callback);\n  };\n\nexport {\n    createDailyRoutine,\n    getAllDailyRoutines,\n    updateDailyRoutineById,\n    toggleRoutineActivity\n};\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Col, Row, Card, CardBody, Button, Container } from \"reactstrap\";\r\n\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport RoutinesForm from \"./forms/RoutinesForm\";\r\nimport { buildRoutinesColumns } from \"./tables/columns\";\r\n\r\nimport { serializeNewRoutine } from \"./serializers\";\r\n\r\nimport { createDailyRoutine, getAllDailyRoutines, updateDailyRoutineById, toggleRoutineActivity } from \"../../../services/routines\";\r\n\r\nclass Routines extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { routineId: null, routineData: null, mode: \"show\", routines: [] };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n\r\n    this.select = this.select.bind(this);\r\n    this.create = this.create.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllDailyRoutines((error, routines) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ routines });\r\n      }\r\n    });\r\n  }\r\n\r\n  toggle(routineId) {\r\n    toggleRoutineActivity(routineId, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        getAllDailyRoutines((error, routines) => {\r\n          if (error) {\r\n            console.log(error);\r\n            if (error.messageToClient === undefined) {\r\n              alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n            } else {\r\n              alert(error.messageToClient);\r\n            }\r\n\r\n          } else {\r\n            this.setState({ routines });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  select(routineId, routineData) {\r\n    this.setState({ mode: \"edit\", routineId, routineData })\r\n  };\r\n\r\n  async edit(event) {\r\n    event.preventDefault();\r\n    const serialized = serializeNewRoutine(event.target.elements, this.state.routineData.isActive);\r\n\r\n    await updateDailyRoutineById(this.state.routineId, serialized, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n      }\r\n    });\r\n\r\n    await getAllDailyRoutines((error, routines) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ routines, mode: \"show\" });\r\n      }\r\n    });\r\n\r\n    this.setState();\r\n  }\r\n\r\n  async create(event) {\r\n    event.preventDefault();\r\n    const serialized = serializeNewRoutine(event.target.elements);\r\n\r\n    await createDailyRoutine(serialized, error => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    await getAllDailyRoutines((error, routines) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ routines, mode: \"show\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { mode, routines, routineData } = this.state;\r\n    const columns = buildRoutinesColumns(this.toggle, this.select);\r\n\r\n    if (!localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} xl={12}>\r\n            <Card>\r\n              <CardBody>\r\n\r\n                { mode === \"create\" && (\r\n                  <div className=\"wizard\">\r\n                    <div className=\"wizard__form-wrapper\">\r\n                      <RoutinesForm onSubmit={this.create} mode={mode} onReturn={() => { this.setState({ mode: \"show\" })} }/>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {\r\n                  mode === \"edit\" && routineData && (\r\n                  <div className=\"wizard\">\r\n                    <div className=\"wizard__form-wrapper\">\r\n                      <RoutinesForm data={routineData} mode={mode} onSubmit={this.edit} onReturn={() => this.setState({ mode: \"show\" })} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                { mode === \"show\" && (\r\n                  <div>\r\n                    <h4 className=\"bold-text\">רשימת סדרי יום</h4>\r\n                    <div className=\"card__title\">\r\n                      <Button size=\"sm\" color=\"primary\" onClick={() => this.setState({ mode: \"create\" })}>יצירת סדר יום חדש</Button>\r\n                    </div>\r\n                    <DataTable\r\n                      data={routines}\r\n                      columns={columns}\r\n                      pagination={true}\r\n                      defaultSortAsc={false}\r\n                      defaultSortField={\"isActive\"}\r\n                      className=\"table-responsive table--bordered\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Routines);\r\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Badge, Button, ButtonGroup } from \"reactstrap\";\n\nconst buildRoutinesColumns = (toggleRoutine, editRoutine) => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true, width: \"10%\" },\n    { name: \"שם\", selector: \"name\", sortable: true },\n    {\n      name: \"סטטוס\",\n      sortable: true,\n      selector: \"isActive\",\n      width: \"10%\",\n      cell: row => (\n        <h4>\n          {\n            row.isActive === true &&\n            <Badge color=\"success\" pill>פעיל</Badge>\n          }\n          {\n            row.isActive === false &&\n            <Badge color=\"secondary\" pill>לא פעיל</Badge>\n          }\n        </h4>\n      )\n    },\n    {\n      name: \"פעולות\",\n      width: \"15%\",\n      cell: row => (\n        <center>\n          <ButtonGroup className=\"btn-group--icons\">\n            { row.isActive === true &&\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => toggleRoutine(row.id)}>\n                <span className=\"lnr lnr-cross-circle\" data-tip=\"להפוך ללא פעיל\" />\n              </Button>\n            }\n            { row.isActive === false &&\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => toggleRoutine(row.id)}>\n                <span className=\"lnr lnr-chevron-right-circle\" data-tip=\"להפוך לפעיל\" />\n              </Button>\n            }\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => editRoutine(row.id, row)}>\n                <span className=\"lnr lnr-pencil\" data-tip=\"ערוך סדר יום\" />\n              </Button>\n            }\n          </ButtonGroup>\n          <ReactTooltip />\n        </center>\n      )\n    }\n  ];\n};\n\nexport {\n  buildRoutinesColumns\n};\n","/* eslint-disable react/prop-types */\nimport React, { PureComponent } from 'react';\nimport { Badge, Card, CardBody, Col, Button, Collapse } from 'reactstrap';\n\nexport default class AlertComponent extends PureComponent {\n  constructor(props) {\n    super();\n    this.state = {\n      collapse: props.collapsed ? false : true,\n    };\n  }\n\n  onCollapse = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  render() {\n    const {\n      md, lg, xl, sm, xs, title, label, subhead, before, panelClass,\n    } = this.props;\n\n    const hidingButtonColor = this.state.collapse ? \"secondary\" : \"primary\";\n    const hidingButtonText = this.state.collapse ? `לסגור תוצאות ${title}` : `להציג תוצאות ${title}`;\n\n    return (\n      <Col md={md} lg={lg} xl={xl} sm={sm} xs={xs}>\n        <Card className = {`panel ${this.state.collapse ? '' : ' panel--collapse'} ${panelClass}`}>\n          <CardBody className=\"panel__body\">\n\n            <div className=\"panel__title\" style={{ display: \"flex\"}}>\n              <Button size=\"sm\" color={hidingButtonColor} onClick={this.onCollapse}>{hidingButtonText}</Button>\n              <Badge className=\"panel__label\">{label}</Badge>\n              <h5 className=\"subhead\">{subhead}</h5>\n            </div>\n\n            <Collapse isOpen={this.state.collapse}>\n              <div className=\"panel__content\">\n                {this.props.children}\n              </div>\n            </Collapse>\n\n          </CardBody>\n        </Card>\n        {before}\n      </Col>\n    );\n  }\n}\n\nexport const PanelTitle = ({ title }) => (\n  <div className=\"panel__title\">\n    <h5 className=\"bold-text\">\n      {title}\n    </h5>\n  </div>\n);\n","import React from \"react\";\r\nimport PollResultsPanel from './components/PollResultsPanel';\r\n\r\nconst PollsResults = ({ results }) => {\r\n  const components = results.reverse().map(\r\n    (poll, pollIndex) => {\r\n      const pollIndexKey = `poll_results_${pollIndex}`;\r\n\r\n      return (\r\n        <PollResultsPanel\r\n          key={pollIndexKey} title={`סקר ${poll.pollName}`} collapsed={pollIndex + 1 === results.length ? false : true}\r\n        >\r\n          <form className=\"form form--horizontal form__half\">\r\n            {\r\n              poll.pollResults.map((result, index) => {\r\n                let booleanAnswerDisplay = \"\";\r\n\r\n                if (result.answer === \"true\") {\r\n                  booleanAnswerDisplay = \"כן\";\r\n                } else if (result.answer === \"false\") {\r\n                  booleanAnswerDisplay = \"לא\";\r\n                }\r\n\r\n                return (\r\n                  <div key={index} className=\"form__form-group\">\r\n                    <span className=\"form__form-group-label\" style={{ width: \"60%\" }}><b>{index + 1} - {result.question}:</b></span>\r\n                    <div className=\"form__form-group-field\" style={{ width: \"60%\" }}>\r\n                      <br/>{booleanAnswerDisplay === \"\" ? result.answer : booleanAnswerDisplay}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            }\r\n          </form>\r\n        </PollResultsPanel>\r\n      )\r\n    }\r\n  );\r\n\r\n  return components;\r\n}\r\n\r\nexport default PollsResults;\r\n","import React, { PureComponent } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { Button, ButtonToolbar } from \"reactstrap\";\n\nclass PatientForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { phone: \"\" };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onPhoneChange = this.onPhoneChange.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.phone);\n  }\n\n  onPhoneChange({ target }) {\n    this.setState({ phone: target.value });\n  }\n\n  render() {\n    const { phone } = this.state;\n    const { onReturn } = this.props;\n\n    const submitDisabled = phone !== \"\" ? false : true;\n\n    return (\n      <div className=\"wizard\">\n        <div className=\"wizard__form-wrapper\">\n          <div style={{ width: \"100%\" }}>\n            <Button\n              size=\"sm\" color=\"secondary\" onClick={onReturn} style={{ float: \"right\", marginLeft: \"10%\" }}\n            >\n              לחזור לרשימת המטופלים\n            </Button>\n\n            <form className=\"form form--horizontal form__half\" onSubmit={this.onSubmit}>\n              <h4 className=\"wizard__title\"><b>מטופל חדש</b></h4>\n\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\"><b>מ״ס טלפון:</b></span>\n                <div className=\"form__form-group-field\">\n                  <input type=\"text\" id=\"phone\" name=\"phone\" placeholder=\"מ״ס טלפון\" onChange={this.onPhoneChange} />\n                </div>\n              </div>\n\n              <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\n                <Button size=\"sm\" color=\"primary\" type=\"submit\" disabled={submitDisabled}>יצירת מטופל חדש</Button>\n              </ButtonToolbar>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(PatientForm);\n","const { handleResponse } = require('../utilities/express/response');\n\nconst API_PORT = process.env.REACT_APP_API_PORT || '2304';\nconst API_HOST = process.env.REACT_APP_API_HOST || 'http://23.21.185.104';\nconst API_URL = `${API_HOST}:${API_PORT}`;\n\nconst headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\n\n const createExerciseCategory = async (data, callback) => {\n    const response = await fetch(`${API_URL}/medicalStaff/createExerciseCategory`, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(data),\n    });\n\n    handleResponse(response, callback);\n }\n\n const createExerciseCategoryType = async (data, callback) => {\n     const response = await fetch(`${API_URL}/medicalStaff/createExerciseCategoryType`, {\n         method: 'POST',\n         headers: headers,\n         body: JSON.stringify(data),\n     });\n\n     handleResponse(response, callback);\n  }\n\n const getAllExercisesTypes = async (callback) => {\n      const response = await fetch(`${API_URL}/medicalStaff/getAllExerciseCategoryTypes`, { method: 'GET' });\n\n      handleResponse(response, callback);\n }\n\n const getAllExerciseCategoriesByUserId = async (userId, callback) => {\n       const response = await fetch(`${API_URL}/medicalStaff/getAllExerciseCategoriesByUserId/id/${userId}`, { method: 'GET' });\n\n       handleResponse(response, callback);\n  }\n\n const updateExerciseCategory = async (id, data, callback) => {\n     const response = await fetch(`${API_URL}/medicalStaff/updateExerciseCategory/id/${id}`, {\n         method: 'POST',\n         headers: headers,\n         body: JSON.stringify(data),\n     });\n\n     handleResponse(response, callback)\n }\n\n const deleteExerciseCategoryById = async (id, callback) => {\n      const response = await fetch(`${API_URL}/medicalStaff/deleteExerciseCategoryById/id/${id}`, { method: 'DELETE' });\n\n      handleResponse(response, callback)\n }\n\nexport {\n    createExerciseCategory,\n    createExerciseCategoryType,\n    getAllExercisesTypes,\n    getAllExerciseCategoriesByUserId,\n    updateExerciseCategory,\n    deleteExerciseCategoryById\n};\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\n\nconst ExerciseComponent = ({\n  exercises, deleteExercise, setDescription, setUrl //, addQuestion, changeQuestion, changeQuestionType, deleteQuestion\n}) => {\n  const components = exercises.map(\n    (exercise, exerciseIndex) => {\n      const exerciseId = `exercise_${exerciseIndex}`;\n\n      return (\n        <div key={exerciseId} className=\"form__form-group\" style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n          <span className=\"form__form-group-label\"><b>פעילות {exerciseIndex + 1}:</b></span>\n\n          <div key={`description_${exerciseId}`} className=\"form__form-group-field\" style={{ width: \"60%\" }}>\n            <input\n              type=\"text\"\n              placeholder=\"תיאור הפעילות\"\n              value={exercise.description}\n              id={`description_${exerciseId}`}\n              name={`description_${exerciseId}`}\n              onChange={({ target }) => setDescription(exerciseIndex, target.value)}\n            />\n          </div>\n          <br/><br/><br/>\n          <div key={`url_${exerciseId}`} className=\"form__form-group-field\" style={{ width: \"60%\" }}>\n            <input\n              type=\"text\"\n              placeholder=\"קישור\"\n              value={exercise.url}\n              id={`url_${exerciseId}`}\n              name={`url_${exerciseId}`}\n              onChange={({ target }) => setUrl(exerciseIndex, target.value)}\n            />\n          </div>\n\n          <br/><br/><br/>\n          <div className=\"form__form-group-field\">\n            <Button\n              size=\"sm\"\n              color=\"danger\"\n              onClick={() => deleteExercise(exerciseIndex)}>\n              מחיקת תרגיל\n            </Button>\n          </div>\n        </div>\n      )\n    }\n  );\n\n  return components;\n}\n\nexport default ExerciseComponent;\n","import React, { PureComponent } from \"react\";\nimport { Button, ButtonToolbar } from \"reactstrap\";\nimport { reduxForm } from 'redux-form';\nimport { getAllExercisesTypes } from '../../../../services/exercises';\nimport ExerciseComponent from '../components/ExerciseComponent';\n\nclass ExerciseForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n        exerciseTypes: [],\n        exercises: [], exercisesCount: 0,\n        name: \"\", userId: \"\", patient: \"\"\n    };\n\n    this.addExercise = this.addExercise.bind(this);\n    this.deleteExercise = this.deleteExercise.bind(this);\n\n    this.changeType = this.changeType.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n    this.setUrl = this.setUrl.bind(this);\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n    const patient = this.props.patient;\n\n    getAllExercisesTypes((errorMessage, exerciseTypes) => {\n      if (errorMessage) {\n        console.log(errorMessage);\n      } else {\n        this.setState({ exerciseTypes, patient });\n      }\n    });\n\n    if (data) {\n        console.log(\"componentDidMount with data = \", data);\n        const name = data.name;\n\n        const exercises = this.props.data.exercises;\n        const exercisesCount = exercises.length;\n\n        const userId = data.userId;\n        console.log(\"exercises = \", exercises);\n\n        this.setState({ name, exercises, exercisesCount, userId, patient });\n    }\n  };\n\n  addExercise() {\n    const exercises = [...this.state.exercises];\n    const exercisesCount = this.state.exercisesCount + 1;\n\n    exercises.push({ description: \"\", url: \"\" });\n\n    this.setState({ exercises, exercisesCount });\n  };\n\n  deleteExercise(exerciseIndex) {\n    const exercises = [...this.state.exercises];\n    const exercisesCount = this.state.exercisesCount - 1;\n\n    exercises.splice(exerciseIndex, 1);\n\n    this.setState({ exercises, exercisesCount });\n  };\n\n  changeType(event) {\n    this.setState({ name: event.target.value});\n  };\n\n  setDescription(exerciseIndex, value) {\n    const exercises = [...this.state.exercises];\n    exercises[exerciseIndex].description = value;\n\n    this.setState({ exercises });\n  };\n\n  setUrl(exerciseIndex, value) {\n    const exercises = [...this.state.exercises];\n    exercises[exerciseIndex].url = value;\n\n    this.setState({ exercises });\n  };\n\n  render() {\n    const { exerciseTypes, exercises, name, patient } = this.state;\n    const { onSubmit, onReturn, data, mode } = this.props;\n\n    // verify if submit button should be enabled.\n    var submitDisabled = false;\n    if (name !== \"\" && exercises.length > 0) {\n      exercises.forEach(function(exercise) {\n        if (exercise.description === \"\") {\n          submitDisabled = true\n          return;\n        }\n      });\n    } else { submitDisabled = true; }\n\n    const typesComponent = exerciseTypes.map((type, index) => {\n      return (\n        <option\n          defaultValue={type.type}\n          key={`${type}_${index}`}\n          selected={data && data.type === type.type}>\n          {type.type}\n        </option>\n      );\n    });\n\n    return (\n    <div style={{ width: \"100%\" }}>\n      <Button\n          size=\"sm\" color=\"secondary\" onClick={onReturn} style={{ float: \"right\", marginLeft: \"10%\" }}>\n          לחזור למטופל{patient.name}\n      </Button>\n\n      <form className=\"form form--horizontal form__half\" onSubmit={onSubmit}>\n      <h4 className=\"bold-text\">פעילות למטופל {patient.phoneNumber}</h4><br/><br/><br/>\n\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\"><b>סוג:</b></span>\n          <div className=\"form__form-group-field\" style={{ width: \"60%\" }}>\n            <select id=\"type\" name=\"type\" className=\"react-select\" onChange={this.changeType} value={name}>\n              <option value='' />\n              {typesComponent}\n            </select>\n          </div>\n        </div>\n\n        <ExerciseComponent\n          exercises={exercises}\n          deleteExercise={e => this.deleteExercise(e)}\n          setDescription={(exerciseIndex, value) => this.setDescription(exerciseIndex, value)}\n          setUrl={e => this.setUrl(e)}\n        />\n\n         <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\n             <Button size=\"sm\" color=\"primary\" onClick={e => this.addExercise()}>הוספת תרגיל</Button>\n             <Button size=\"sm\" color=\"success\" type=\"submit\" disabled={submitDisabled}>\n                {mode === \"createExercise\" && \"יצירת פעילות\"}\n                {mode === \"editExercise\" && \"עדכון פעילות\"}\n             </Button>\n          </ButtonToolbar>\n      </form>\n    </div>\n    );\n  }\n}\n\nexport default reduxForm({ form: 'exercise_form'})(ExerciseForm);\n","const serializeNewExercise = (formData, userId) => {\n  const data = { name: \"\", exercises: [], userId: \"\" };\n\n  data.userId = userId\n  console.log(\"serializeNewExercise - formData = \", formData);\n  for (let i = 0; i < formData.length; i++) {\n    const { id, value, nodeName } = formData[i];\n\n    switch (nodeName) {\n      case \"INPUT\":\n        if (id.startsWith(\"description\"))  {\n          const exerciseIndex = id.split(\"_\")[2];\n          const exerciseDescription = value\n\n          if (!data.exercises[exerciseIndex]) {\n            data.exercises.push({ description: exerciseDescription });\n          } else {\n            data.exercises[exerciseIndex].description = exerciseDescription;\n          }\n        } else if (id.startsWith(\"url\")) {\n          const exerciseIndex = id.split(\"_\")[2];\n          const exerciseUrl = value\n\n          if (!data.exercises[exerciseIndex]) {\n            data.exercises.push({ url: exerciseUrl });\n          } else {\n            data.exercises[exerciseIndex].url = exerciseUrl;\n          }\n        }\n      break\n\n      case \"SELECT\":\n        if (id === \"type\") {\n          data.name = value;\n        }\n      break\n\n      default:\n     ;   console.log(\"is not input field\");\n    }\n  }\n  console.log(\"serializeNewExercise returning data = \", data);\n\n  return data;\n};\n\nexport { serializeNewExercise };\n","const { handleResponse } = require('../utilities/express/response');\n\nconst API_PORT = process.env.REACT_APP_API_PORT || '2304';\nconst API_HOST = process.env.REACT_APP_API_HOST || 'http://23.21.185.104';\nconst API_URL = `${API_HOST}:${API_PORT}`;\n\nconst headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\n\nconst createPatient = async (data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/createPatient`, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  handleResponse(response, callback);\n};\n\nconst sendPushToPatient = async (data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/sendPushToPatient`, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  handleResponse(response, callback);\n};\n\nconst getAllPatients = async (callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/patients`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nconst togglePatientHospitalization = async (patientId, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/togglePatientHospitalization/id/${patientId}`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nconst getMedicalPollResultsForUser = async (patientId, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/getMedicalPollResultsForUser/userId/${patientId}`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nconst getAllPushNotificationsByUserId = async (patientId, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/getAllPushNotificationsByUserId/id/${patientId}`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nexport {\n  createPatient,\n  getAllPatients,\n  sendPushToPatient,\n  togglePatientHospitalization,\n  getMedicalPollResultsForUser,\n  getAllPushNotificationsByUserId,\n};\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Col, Row, Card, CardBody, Button, ButtonToolbar, Container } from \"reactstrap\";\r\n\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport PollsResults from \"./PollsResults\";\r\nimport PatientForm from \"./forms/PatientForm\";\r\nimport ExerciseForm from \"./forms/ExerciseForm\";\r\nimport { buildPatientsColumns, buildMessagesColumns, buildExercisesColumns } from \"./tables/columns\";\r\n\r\nimport { serializeNewExercise } from \"./serializers\";\r\n\r\nimport {\r\n  createPatient,\r\n  getAllPatients,\r\n  sendPushToPatient,\r\n  togglePatientHospitalization,\r\n  getMedicalPollResultsForUser,\r\n  getAllPushNotificationsByUserId\r\n} from \"../../../services/patients\";\r\n\r\nimport {\r\n  getAllExerciseCategoriesByUserId,\r\n  deleteExerciseCategoryById,\r\n  createExerciseCategory,\r\n  updateExerciseCategory\r\n} from \"../../../services/exercises\";\r\n\r\nclass Patients extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      polls: [],\r\n      mode: \"show\",\r\n      patient: {},\r\n      patients: [],\r\n      messages: [],\r\n      message: { subject: null, text: null },\r\n      exercises: [], exerciseId: \"\",\r\n      exerciseData: null\r\n    };\r\n\r\n    this.polls = this.polls.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.messages = this.messages.bind(this);\r\n\r\n    this.sendMessage = this.sendMessage.bind(this);\r\n    this.createPatient = this.createPatient.bind(this);\r\n\r\n    this.onSubjectChange = this.onSubjectChange.bind(this);\r\n    this.onMessageChange = this.onMessageChange.bind(this);\r\n\r\n    this.addExercise = this.addExercise.bind(this);\r\n    this.fetchExercises = this.fetchExercises.bind(this);\r\n    this.select = this.select.bind(this);\r\n    this.deleteExercise = this.deleteExercise.bind(this);\r\n    this.editExercise = this.editExercise.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllPatients((error, patients) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ patients });\r\n      }\r\n    });\r\n  }\r\n\r\n  polls(patient) {\r\n    getMedicalPollResultsForUser(patient.id, (error, polls) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ mode: \"polls\", patient, polls });\r\n      }\r\n    });\r\n  };\r\n\r\n  toggle(patient) {\r\n    togglePatientHospitalization(patient.id, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        getAllPatients((error, patients) => {\r\n          if (error) {\r\n            console.log(error);\r\n            if (error.messageToClient === undefined) {\r\n              alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n            } else {\r\n              alert(error.messageToClient);\r\n            }\r\n\r\n          } else {\r\n            this.setState({ patients });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  messages(patient) {\r\n    getAllPushNotificationsByUserId(patient.id, (error, messages) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ mode: \"messages\", patient, messages });\r\n      }\r\n    });\r\n  };\r\n\r\n  onSubjectChange({ target }) {\r\n    this.setState({ message: { ...this.state.message, subject: target.value }});\r\n  }\r\n\r\n  onMessageChange({ target }) {\r\n    this.setState({ message: { ...this.state.message, text: target.value }});\r\n  }\r\n\r\n  async sendMessage(event) {\r\n    event.preventDefault();\r\n    const { patient, message } = this.state;\r\n\r\n    const data = {\r\n      userId: patient.id,\r\n      notificationBody: message.text,\r\n      notificationTitle: message.subject\r\n    };\r\n\r\n    await sendPushToPatient(data, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.messages(patient);\r\n      }\r\n    });\r\n  };\r\n\r\n  async createPatient(phone) {\r\n    const data = { phoneNumber: phone };\r\n\r\n    await createPatient(data, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    await getAllPatients((error, patients) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ patients, mode: \"show\"});\r\n      }\r\n    });\r\n  }\r\n\r\n  //exercises region\r\n\r\n  async addExercise(event) {\r\n    event.preventDefault();\r\n\r\n    const patient = this.state.patient;\r\n    const userId = patient.id;\r\n    const serialized = serializeNewExercise(event.target.elements, userId);\r\n\r\n    await createExerciseCategory(serialized, errorMessage => {\r\n      if (errorMessage) {\r\n        console.log(errorMessage);\r\n      } else {\r\n        this.fetchExercises(patient);\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchExercises(patient) {\r\n    getAllExerciseCategoriesByUserId(patient.id, (errorMessage, exercises) => {\r\n      if (errorMessage) {\r\n        console.log(errorMessage);\r\n      } else {\r\n        //TODO show appropriate message when exercises are empty.\r\n        console.log(\"getAllExerciseCategoriesByUserId - \", exercises);\r\n        this.setState({ mode: \"exercises\", patient, exercises });\r\n      }\r\n    });\r\n  }\r\n\r\n  select(exerciseId, exerciseData) {\r\n    this.setState({ mode: \"editExercise\", exerciseId, exerciseData });\r\n  }\r\n\r\n  async editExercise(event) {\r\n    event.preventDefault();\r\n\r\n    const patient = this.state.patient;\r\n    const userId = patient.id;\r\n\r\n    const serialized = serializeNewExercise(event.target.elements, userId);\r\n\r\n    await updateExerciseCategory(userId, serialized, errorMessage => {\r\n      if (errorMessage) {\r\n        console.log(errorMessage);\r\n      } else {\r\n        this.fetchExercises(patient);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteExercise(rowId) {\r\n    console.log(\"deleteExercise with deleteExercise = \", rowId);\r\n    deleteExerciseCategoryById(rowId, errorMessage => {\r\n      if (errorMessage) {\r\n        console.log(\"deleteExerciseCategoryById - \", errorMessage)\r\n      } else {\r\n        //TODO show a delete notification\r\n        this.fetchExercises(this.state.patient)\r\n        console.log(\"Exercise deleted successfully!\")\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  //end of exercises region\r\n\r\n  render() {\r\n    const { mode, patient, patients, polls, messages, exercises, exerciseData } = this.state;\r\n    const columnsMessages = buildMessagesColumns();\r\n    const columnsPatients = buildPatientsColumns(this.polls, this.toggle, this.messages, this.fetchExercises);\r\n    const columnsExercises = buildExercisesColumns(this.select, this.deleteExercise);\r\n\r\n    if (!localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} xl={12}>\r\n            <Card>\r\n              <CardBody>\r\n\r\n                { mode === \"create\" && (\r\n                  <PatientForm mode={mode} onSubmit={this.createPatient} onReturn={() => this.setState({ mode: \"show\" })} />\r\n                )}\r\n\r\n                { mode === \"messages\" && (\r\n                  <div>\r\n                    <h4 className=\"bold-text\">הודעות למטופל {patient.phoneNumber}</h4>\r\n                    <div className=\"card__title\">\r\n                      <Button size=\"sm\" color=\"secondary\" onClick={() => this.setState({ mode: \"show\" })}>\r\n                        לחזור לרשימת המטופלים\r\n                      </Button>\r\n\r\n                      <form\r\n                        onSubmit={this.sendMessage}\r\n                        style={{ marginTop: \"30px\" }}\r\n                        className=\"form form--horizontal form__half\"\r\n                      >\r\n                        <div className=\"form__form-group\">\r\n                          <span className=\"form__form-group-label\"><b>כותרת:</b></span>\r\n                          <div className=\"form__form-group-field\">\r\n                            <input id=\"sub\" placeholder=\"כותרת\" onChange={this.onSubjectChange} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form__form-group\">\r\n                          <span className=\"form__form-group-label\"><b>הודעה:</b></span>\r\n                          <div className=\"form__form-group-field\">\r\n                            <textarea id=\"msg\" placeholder=\"הודעה\" onChange={this.onMessageChange} />\r\n                          </div>\r\n                        </div>\r\n                        <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\r\n                          <Button size=\"sm\" color=\"primary\" type=\"submit\">\r\n                            שלח הודעה למטופל\r\n                          </Button>\r\n                        </ButtonToolbar>\r\n                      </form>\r\n                    </div>\r\n                    <DataTable\r\n                      data={messages}\r\n                      pagination={true}\r\n                      defaultSortAsc={false}\r\n                      defaultSortField={\"id\"}\r\n                      columns={columnsMessages}\r\n                      className=\"table-responsive table--bordered\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                { mode === \"polls\" && (\r\n                  <div>\r\n                    <h4 className=\"bold-text\">תוצאות של הסקרים למטופל {patient.phoneNumber}</h4>\r\n                    <div className=\"card__title\">\r\n                      <Button size=\"sm\" color=\"secondary\" onClick={() => this.setState({ mode: \"show\" })}>\r\n                        לחזור לרשימת המטופלים\r\n                      </Button>\r\n                    </div>\r\n                    <PollsResults results={polls} />\r\n                  </div>\r\n                )}\r\n\r\n                { mode === \"show\" && (\r\n                  <div>\r\n                    <h4 className=\"bold-text\">רשימת המטופלים</h4>\r\n                    <div className=\"card__title\">\r\n                      <Button size=\"sm\" color=\"primary\" onClick={() => this.setState({ mode: \"create\" })}>\r\n                        הוספת מטופל\r\n                      </Button>\r\n                    </div>\r\n                    <DataTable\r\n                      data={patients}\r\n                      pagination={true}\r\n                      defaultSortAsc={false}\r\n                      columns={columnsPatients}\r\n                      defaultSortField={\"hospitalized\"}\r\n                      className=\"table-responsive table--bordered\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                { mode === \"exercises\" && (\r\n                  <div>\r\n                    <h4 className=\"bold-text\">פעילויות למטופל {patient.phoneNumber}</h4>\r\n                    <div className=\"card__title\">\r\n                      <Button size=\"sm\" color=\"secondary\" onClick={() => this.setState({ mode: \"show\" })}>\r\n                        לחזור לרשימת המטופלים\r\n                      </Button>\r\n                      <br/><br/><br/>\r\n                      <Button size=\"sm\" color=\"primary\" onClick={() => this.setState({ mode: \"createExercise\" })}>\r\n                        יצירת פעילות חדשה\r\n                      </Button>\r\n\r\n                      <DataTable\r\n                        data={exercises}\r\n                        pagination={true}\r\n                        defaultSortAsc={false}\r\n                        columns={columnsExercises}\r\n                        className=\"table-responsive table--bordered\"\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                { mode === \"createExercise\" && (\r\n                  <div className=\"wizard\">\r\n                    <div className=\"wizard__form-wrapper\">\r\n                      <ExerciseForm patient={patient} onSubmit={this.addExercise} mode={mode} onReturn={() => { this.setState({ mode: \"exercises\" })} }/>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                { mode === \"editExercise\" && (\r\n                  <div className=\"wizard\">\r\n                    <div className=\"wizard__form-wrapper\">\r\n                      <ExerciseForm patient={patient} data={exerciseData} onSubmit={this.editExercise} mode={mode} onReturn={() => { this.setState({ mode: \"exercises\" })} }/>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Patients);\r\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Badge, Button, ButtonGroup } from \"reactstrap\";\n\nconst buildPatientsColumns = (polls, toggle, messages, fetchExercises) => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true, width: \"10%\" },\n    { name: \"מ״ס טלפון\", selector: \"phoneNumber\", sortable: true },\n    {\n      name: \"סטטוס\",\n      sortable: true,\n      selector: \"hospitalized\",\n      cell: row => (\n        <h4>\n          {\n            row.hospitalized === true &&\n            <Badge color=\"success\" pill>מאושפז</Badge>\n          }\n          {\n            row.hospitalized === false &&\n            <Badge color=\"secondary\" pill>משוחרר</Badge>\n          }\n        </h4>\n      )\n    },\n    {\n      name: \"תאריך כניסה\",\n      sortable: true,\n      selector: \"startTimestamp\",\n      cell: row => (\n        <div>\n          {\n            (new Date(parseInt(row.startTimestamp) * 1000)).toLocaleDateString()\n          }\n        </div>\n      )\n    },\n    {\n      name: \"תאריך יציאה\",\n      sortable: true,\n      selector: \"endTimestamp\",\n      cell: row => (\n        <div>\n          {\n            row.endTimestamp === 0 ? \"-\" : (new Date(parseInt(row.endTimestamp) * 1000)).toLocaleDateString()\n          }\n        </div>\n      )\n    },\n    {\n      name: \"פעולות\",\n      cell: row => (\n        <center>\n          <ButtonGroup className=\"btn-group--icons\">\n            { row.hospitalized === true &&\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => toggle(row)}>\n                <span className=\"lnr lnr-cross-circle\" data-tip=\"להפוך למשוחרר\" />\n              </Button>\n            }\n            { row.hospitalized === false &&\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => toggle(row)}>\n                <span className=\"lnr lnr-chevron-right-circle\" data-tip=\"להפוך למאושפז\" />\n              </Button>\n            }\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => messages(row)}>\n                <span className=\"lnr lnr-envelope\" data-tip=\"הודעות\" />\n              </Button>\n            }\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => polls(row)}>\n                <span className=\"lnr lnr-list\" data-tip=\"תוצאות השאלונים\" />\n              </Button>\n            }\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => fetchExercises(row)}>\n                <span className=\"lnr lnr-heart-pulse\" data-tip=\"פעילויות\" />\n              </Button>\n            }\n          </ButtonGroup>\n          <ReactTooltip />\n        </center>\n      )\n    }\n  ];\n};\n\nconst buildMessagesColumns = () => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true, width: \"10%\" },\n    { name: \"כותרת\", selector: \"notificationTitle\" },\n    { name: \"הודעה\", selector: \"notificationBody\" },\n    {\n      name: \"תאריך\",\n      sortable: true,\n      selector: \"timeStamp\",\n      cell: row => (\n        <div>\n          {\n            (new Date(parseInt(row.timeStamp) * 1000)).toLocaleDateString()\n          }\n        </div>\n      )\n    },\n  ];\n};\n\nconst buildExercisesColumns = (select, deleteExercise) => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true, width: \"10%\" },\n    { name: \"סוג פעילות\", selector: \"name\" },\n    { name: \"מספר תרגילים\", selector: \"exercises.length\" },\n    {\n      name: \"פעולות\",\n      cell: row => (\n        <center>\n          <ButtonGroup className=\"btn-group--icons\">\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => select(row.id, row)}>\n                <span className=\"lnr lnr-pencil\" data-tip=\"עריכת פעילות\" />\n              </Button>\n            }\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => deleteExercise(row.id)}>\n                <span className=\"lnr lnr-cross\" data-tip=\"מחיקה\" />\n              </Button>\n            }\n          </ButtonGroup>\n          <ReactTooltip />\n        </center>\n      )\n    }\n  ];\n};\n\nexport {\n  buildPatientsColumns,\n  buildMessagesColumns,\n  buildExercisesColumns\n};\n","import React, { PureComponent } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, ButtonToolbar } from \"reactstrap\";\n\nimport TimePicker from \"../../../../shared/components/form/TimePicker\";\nimport Moment from \"moment\";\n\nclass NotificationForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props && props.notification ? props.notification.title : \"\",\n      body: props && props.notification ? props.notification.body : \"\",\n      time: props && props.notification ? props.notification.time : \"12:00\",\n      weekdays: props && props.notification ? props.notification.weekdays : true,\n      id: props && props.notification.id\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTimeChange = this.onTimeChange.bind(this);\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.onWeekendChange = this.onWeekendChange.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n  }\n\n  onFieldChange({ target }) {\n    this.setState({ [target.id]: target.value });\n  }\n\n  onTimeChange(time) {\n    this.setState({ time: Moment(time._d).format(\"HH:mm\") });\n  }\n\n  onWeekendChange() {\n    this.setState({ weekdays: !this.state.weekdays });\n  }\n\n  render() {\n    const { mode, onReturn } = this.props;\n    const { title, body, time, weekdays } = this.state;\n    const submitDisabled = ![title, body, time].includes(\"\") ? false : true;\n\n    return (\n      <div className=\"wizard\">\n        <div className=\"wizard__form-wrapper\">\n          <div style={{ width: \"100%\" }}>\n            <Button\n              size=\"sm\" color=\"secondary\" onClick={onReturn} style={{ float: \"right\", marginLeft: \"10%\" }}\n            >\n              לחזור להודעות מתוזמנות\n            </Button>\n\n            <form className=\"form form--horizontal form__half\" onSubmit={this.onSubmit}>\n              <h4 className=\"wizard__title\">\n                <b>\n                {mode === \"create\" && \"הודעה מתוזמנת חדשה\"}\n                {mode === \"edit\" && \"עדכון הודעה מתוזמנת\"}\n                </b>\n              </h4>\n\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\"><b>כותרת:</b></span>\n                <div className=\"form__form-group-field\">\n                  <input\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    placeholder=\"כותרת\"\n                    defaultValue={title}\n                    onChange={this.onFieldChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\"><b>הודעה:</b></span>\n                <div className=\"form__form-group-field\">\n                  <textarea\n                    id=\"body\"\n                    name=\"body\"\n                    placeholder=\"הודעה\"\n                    defaultValue={body}\n                    onChange={this.onFieldChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\"><b>שעה:</b></span>\n                <div className=\"form__form-group-field\">\n                  <TimePicker\n                    id=\"time\"\n                    name=\"time\"\n                    format=\"HH:mm\"\n                    onChange={this.onTimeChange}\n                    defaultValue={Moment(time, \"HH:mm\")}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\"><b>סופ״ש:</b></span>\n                <div className=\"form__form-group-field\" style={{ display: \"flex\" }}>\n                  <input\n                    id=\"weekend\"\n                    name=\"weekend\"\n                    type=\"checkbox\"\n                    checked={!weekdays}\n                    style={{ flex: \"0 0 5%\" }}\n                    onChange={this.onWeekendChange}\n                    onClick={this.onWeekendChange}\n                  />\n                </div>\n              </div>\n              <ButtonToolbar className=\"form__button-toolbar wizard__toolbar\">\n                { mode === \"create\" && <Button size=\"sm\" color=\"primary\" type=\"submit\" disabled={submitDisabled}>צור הודעה מתוזמנת</Button> }\n                { mode === \"edit\" && <Button size=\"sm\" color=\"primary\" type=\"submit\" disabled={submitDisabled}>עדכון הודעה מתוזמנת</Button> }\n              </ButtonToolbar>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(NotificationForm);\n","const { handleResponse } = require('../utilities/express/response');\n\nconst API_PORT = process.env.REACT_APP_API_PORT || '2304';\nconst API_HOST = process.env.REACT_APP_API_HOST || 'http://23.21.185.104';\nconst API_URL = `${API_HOST}:${API_PORT}`;\n\nconst headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\n\nconst createScheduledNotification = async (data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/createScheduledNotification`, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  handleResponse(response, callback);\n};\n\nconst editScheduledNotification = async (data, callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/updateScheduledNotification/id/${data.id}`, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(data),\n    });\n\n    handleResponse(response, callback);\n};\n\nconst getAllScheduledNotifications = async (callback) => {\n  const response = await fetch(`${API_URL}/medicalStaff/getAllScheduledNotifications`, { method: 'GET' });\n\n  handleResponse(response, callback);\n};\n\nconst toggleScheduledNotification = async (notificationId, callback) => {\n  const response = await fetch(\n    `${API_URL}/medicalStaff/toggleScheduledNotificationActivity/id/${notificationId}`, { method: 'GET' }\n  );\n\n  handleResponse(response, callback);\n};\n\nexport {\n  createScheduledNotification,\n  editScheduledNotification,\n  getAllScheduledNotifications,\n  toggleScheduledNotification\n};\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Col, Row, Card, CardBody, Button, Container } from \"reactstrap\";\r\n\r\nimport NotificationForm from \"./forms/NotificationForm\";\r\nimport { buildNotificationsColumns } from \"./tables/columns\";\r\n\r\nimport {\r\n  getAllScheduledNotifications,\r\n  toggleScheduledNotification,\r\n  createScheduledNotification,\r\n  editScheduledNotification\r\n} from \"../../../services/notifications\";\r\n\r\nclass ScheduledNotifications extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: \"show\", notification: null, notifications: [],\r\n    };\r\n\r\n    this.listNotifications = this.listNotifications.bind(this);\r\n    this.toggleNotification = this.toggleNotification.bind(this);\r\n    this.selectNotification = this.selectNotification.bind(this);\r\n    this.createNotification = this.createNotification.bind(this);\r\n    this.editNotification = this.editNotification.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllScheduledNotifications((error, notifications) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ notifications });\r\n      }\r\n    });\r\n  }\r\n\r\n  async listNotifications() {\r\n    await getAllScheduledNotifications((error, notifications) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.setState({ mode: \"show\", notifications });\r\n      }\r\n    });\r\n  }\r\n\r\n  async toggleNotification(notification) {\r\n    await toggleScheduledNotification(notification.id, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      }\r\n    });\r\n    this.listNotifications();\r\n  };\r\n\r\n  async selectNotification(notification) {\r\n    this.setState({ mode: \"edit\", notification });\r\n  }\r\n\r\n  async createNotification(data) {\r\n    await createScheduledNotification(data, error => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      }\r\n    });\r\n    this.listNotifications();\r\n  }\r\n\r\n  async editNotification(data) {\r\n    await editScheduledNotification(data, error => {\r\n      if (error) {\r\n        console.log(error);\r\n        if (error.messageToClient === undefined) {\r\n          alert(\"אופס, אנא נסה שוב מאוחר יותר\");\r\n        } else {\r\n          alert(error.messageToClient);\r\n        }\r\n\r\n      } else {\r\n        this.listNotifications();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { mode, notification, notifications } = this.state;\r\n    const columnsNotifications = buildNotificationsColumns(this.toggleNotification, this.selectNotification);\r\n\r\n    if (!localStorage.getItem(\"user\")) {\r\n      this.props.history.push(\"/sign_in\");\r\n    }\r\n\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} xl={12}>\r\n            <Card>\r\n              <CardBody>\r\n                { mode === \"create\" && (\r\n                  <NotificationForm\r\n                    mode={mode}\r\n                    onSubmit={this.createNotification}\r\n                    onReturn={() => this.setState({ mode: \"show\" })}\r\n                  />\r\n                )}\r\n\r\n                { mode === \"edit\" && (\r\n                  <NotificationForm\r\n                    mode={mode}\r\n                    notification={notification}\r\n                    onSubmit={this.editNotification}\r\n                    onReturn={() => this.setState({ mode: \"show\" })}\r\n                  />\r\n                )}\r\n\r\n                { mode === \"show\" && (\r\n                  <div>\r\n                    <h4 className=\"bold-text\">הודעות מתוזמנות</h4>\r\n                    <div className=\"card__title\">\r\n                      <Button size=\"sm\" color=\"primary\" onClick={() => this.setState({ mode: \"create\" })}>\r\n                        לצור הודעה מתוזמנת\r\n                      </Button>\r\n                    </div>\r\n                    <DataTable\r\n                      pagination={true}\r\n                      data={notifications}\r\n                      defaultSortAsc={false}\r\n                      columns={columnsNotifications}\r\n                      className=\"table-responsive table--bordered\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ScheduledNotifications);\r\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Badge, Button, ButtonGroup } from \"reactstrap\";\n\nconst buildNotificationsColumns = (toggleNotification, selectNotification) => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true, width: \"5%\" },\n    { name: \"כותרת\", selector: \"title\", sortable: true },\n    { name: \"הודעה\", selector: \"body\", sortable: true },\n    { name: \"שעה\", selector: \"time\", sortable: true, width: \"7%\" },\n    {\n      name: \"יום\",\n      width: \"10%\",\n      sortable: true,\n      selector: \"weekdays\",\n      cell: row => (\n        <h4>\n          {\n            row.weekdays === true &&\n            <Badge color=\"warning\" pill>יום חול</Badge>\n          }\n          {\n            row.weekdays === false &&\n            <Badge color=\"warning\" pill>סופ״ש</Badge>\n          }\n        </h4>\n      )\n    },\n    {\n      name: \"סטטוס\",\n      width: \"10%\",\n      sortable: true,\n      selector: \"active\",\n      cell: row => (\n        <h4>\n          {\n            row.active === true &&\n            <Badge color=\"success\" pill>פעיל</Badge>\n          }\n          {\n            row.active === false &&\n            <Badge color=\"secondary\" pill>לא פעיל</Badge>\n          }\n        </h4>\n      )\n    },\n    {\n      name: \"פעולות\",\n      width: \"10%\",\n      cell: row => (\n        <center>\n          <ButtonGroup className=\"btn-group--icons\">\n            { row.active === true &&\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => toggleNotification(row)}>\n                <span className=\"lnr lnr-cross-circle\" data-tip=\"להפוך ללא פעיל\" />\n              </Button>\n            }\n            { row.active === false &&\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => toggleNotification(row)}>\n                <span className=\"lnr lnr-chevron-right-circle\" data-tip=\"להפוך לפעיל\" />\n              </Button>\n            }\n            {\n              <Button outline style={{ backgroundColor: \"#9dd1fc\" }} onClick={() => selectNotification(row)}>\n                <span className=\"lnr lnr-pencil\" data-tip=\"ערוך הודעה\" />\n              </Button>\n            }\n          </ButtonGroup>\n          <ReactTooltip />\n        </center>\n      )\n    }\n  ];\n};\n\nexport {\n  buildNotificationsColumns,\n};\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { PureComponent } from 'react';\r\nimport { Col, Row, Card, CardBody, Button, Container } from 'reactstrap';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { buildExercisesTypesColumns } from './tables/columns';\r\nimport { getAllExercisesTypes, createExerciseCategoryType } from '../../../services/exercises';\r\n\r\n//imports for the dialog\r\n// import Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//end of imports for dialog\r\nclass ExercisesTypes extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { exercisesTypes: [], open: false, newName: \"\"};\r\n  }\r\n\r\n  handleOpenDialog() {\r\n      this.setState({ open: true });\r\n  };\r\n\r\n  handleCloseDialog() {\r\n      this.setState({ open: false });\r\n  };\r\n\r\n  handleSaveType(e) {\r\n    const newName = this.state.newName;\r\n    console.log(\"handleSaveType newName = \", newName);\r\n\r\n    if (newName !== \"\") {\r\n      const data = { type: newName };\r\n\r\n      createExerciseCategoryType(data, (errorMessage, newExerciseType) => {\r\n        if (errorMessage) {\r\n          console.log(errorMessage);\r\n        } else {\r\n          console.log(\"createExerciseCategoryType success\");\r\n          this.setState({ open: false });\r\n          this.fetchTypes();\r\n        }\r\n      })\r\n    } else {\r\n      console.log(\"handleSaveType - cant save with empty newName\");\r\n    }\r\n  }\r\n\r\n  onChangeName(name) {\r\n    this.setState({ newName: name })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchTypes();\r\n  };\r\n\r\n  fetchTypes() {\r\n    getAllExercisesTypes((errorMessage, exercisesTypes) => {\r\n      if (errorMessage) {\r\n        console.log(errorMessage);\r\n      } else {\r\n        this.setState({ exercisesTypes });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { exercisesTypes, open } = this.state;\r\n    const exercisesTypesColumns = buildExercisesTypesColumns();\r\n\r\n    return (\r\n      <Container className=\"dashboard\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} xl={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <h4 className=\"bold-text\">רשימת סוגי הפעילויות</h4>\r\n                <div className=\"card__title\">\r\n                    <Button size=\"sm\" color=\"primary\" onClick={e => this.handleOpenDialog()}>יצירת סוג פעילות חדש</Button>\r\n                </div>\r\n                <DataTable\r\n                  data={exercisesTypes}\r\n                  columns={exercisesTypesColumns}\r\n                  pagination={true}\r\n                  className=\"table-responsive table--bordered\"\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Dialog\r\n          dir=\"rtl\"\r\n          open={open}\r\n          className=\"rtl-support\"\r\n          aria-labelledby=\"form-dialog-title\"\r\n          onClose={e => this.handleCloseDialog()}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\"><center>יצירת סוג פעילות חדש</center></DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              סוג פעילות נועד להבדיל בין סוגים שונים של פעילויות פרא-רפואיות עבור המטופלים.\r\n            </DialogContentText>\r\n            <TextField\r\n              props\r\n              fullWidth\r\n              id=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"שם הפעילות...\"\r\n              onChange={( e ) => this.onChangeName(e.target.value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button size=\"sm\" onClick={e => this.handleCloseDialog()} color=\"primary\">\r\n              ביטול\r\n            </Button>\r\n            <Button size=\"sm\" onClick={e => this.handleSaveType()} color=\"primary\">\r\n              שמירה\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExercisesTypes;\r\n","const buildExercisesTypesColumns = () => {\n  return [\n    { name: \"#\", selector: \"id\", sortable: true },\n    { name: \"סוג\", selector: \"type\", sortable: true },\n  ];\n};\n\nexport {\n  buildExercisesTypesColumns\n};\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Layout from '../Layout';\r\nimport MainWrapper from './MainWrapper';\r\n\r\nimport SignIn from '../Account/SignIn';\r\nimport SignUp from '../Account/SignUp';\r\nimport SignOut from '../Account/SignOut';\r\n\r\nimport Polls from '../Pages/Polls/Polls';\r\nimport PollsResults from '../Pages/Polls/PollsResults';\r\nimport PollsTypes from '../Pages/Polls/PollsTypes';\r\nimport PollsTypeCreate from '../Pages/Polls/PollsTypeCreate';\r\n\r\nimport GenericQuestionTypes from '../Pages/GenericQuestions/GenericQuestionTypes';\r\n\r\nimport Routines from '../Pages/Routines/Routines';\r\nimport Patients from '../Pages/Patients/Patients';\r\nimport ScheduledNotifications from '../Pages/Notifications/ScheduledNotifications';\r\n\r\nimport ExercisesTypes from '../Pages/Exercises/ExercisesTypes';\r\n\r\nconst wrappedRoutes = () => (\r\n  <div>\r\n    <Layout />\r\n    <div className=\"container__wrap\">\r\n      <Route exact path=\"/dash/polls\" component={Polls} />\r\n      <Route exact path=\"/dash/polls/types\" component={PollsTypes} />\r\n      <Route exact path=\"/dash/polls/types/create\" component={PollsTypeCreate} />\r\n      <Route exact path=\"/dash/polls/results/:pollSubType/:pollId/:pollName\" component={PollsResults} />\r\n\r\n      <Route exact path=\"/dash/GenericQuestions/GenericQuestionTypes\" component={GenericQuestionTypes} />\r\n\r\n      <Route exact path=\"/dash/routines\" component={Routines} />\r\n      <Route exact path=\"/dash/patients\" component={Patients} />\r\n      <Route exact path=\"/dash/notifications\" component={ScheduledNotifications} />\r\n      <Route exact path=\"/dash/exercises/types\" component={ExercisesTypes} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Router = () => (\r\n  <MainWrapper>\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={SignIn} />\r\n        <Route exact path=\"/sign_in\" component={SignIn} />\r\n        <Route exact path=\"/sign_up\" component={SignUp} />\r\n        <Route exact path=\"/sign_out\" component={SignOut} />\r\n\r\n        <Route path=\"/dash/\" component={wrappedRoutes} />\r\n\r\n        <Route component={SignIn} />\r\n      </Switch>\r\n    </main>\r\n  </MainWrapper>\r\n);\r\n\r\nexport default Router;\r\n","import {\n  CHANGE_DIRECTION_TO_LTR,\n  CHANGE_DIRECTION_TO_RTL,\n} from '../actions/rtlActions';\n\nconst initialState = {\n  direction: 'rtl',\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_DIRECTION_TO_LTR:\n      return { direction: 'ltr' };\n    case CHANGE_DIRECTION_TO_RTL:\n      return { direction: 'rtl' };\n    default:\n      return state;\n  }\n}\n","import {\r\n  CHANGE_THEME_TO_DARK,\r\n  CHANGE_THEME_TO_LIGHT,\r\n} from '../actions/themeActions';\r\n\r\nconst initialState = {\r\n  className: 'theme-light',\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_THEME_TO_DARK:\r\n      return { className: 'theme-dark' };\r\n    case CHANGE_THEME_TO_LIGHT:\r\n      return { className: 'theme-light' };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CHANGE_SIDEBAR_VISIBILITY,\r\n  CHANGE_MOBILE_SIDEBAR_VISIBILITY,\r\n} from '../actions/sidebarActions';\r\n\r\nconst initialState = {\r\n  show: false,\r\n  collapse: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_SIDEBAR_VISIBILITY:\r\n      return { ...state, collapse: !state.collapse };\r\n    case CHANGE_MOBILE_SIDEBAR_VISIBILITY:\r\n      return { ...state, show: !state.show };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  TOGGLE_BOX_SHADOW,\r\n  CHANGE_BORDER_RADIUS,\r\n  TOGGLE_TOP_NAVIGATION,\r\n} from '../actions/customizerActions';\r\n\r\nconst initialState = {\r\n  squaredCorners: false,\r\n  withBoxShadow: false,\r\n  topNavigation: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_BORDER_RADIUS:\r\n      return { ...state, squaredCorners: !state.squaredCorners };\r\n    case TOGGLE_BOX_SHADOW:\r\n      return { ...state, withBoxShadow: !state.withBoxShadow };\r\n    case TOGGLE_TOP_NAVIGATION:\r\n      return { ...state, topNavigation: !state.topNavigation };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CHANGE_NEW_ORDER_TABLE_DATA,\r\n  DELETE_NEW_ORDER_TABLE_DATA,\r\n  LOAD_NEW_ORDER_TABLE_DATA,\r\n} from '../actions/newOrderTableActions';\r\n\r\nconst initialState = {\r\n  items: [\r\n    {\r\n      title: 'Nike Airmax',\r\n      quantity: 142,\r\n      sold: 124,\r\n      total: '$ 4 234',\r\n      img: `${process.env.PUBLIC_URL}/img/shoes/01.png`,\r\n    },\r\n    {\r\n      title: 'Reebok ZeegTech',\r\n      quantity: 98,\r\n      sold: 53,\r\n      total: '$ 1 754',\r\n      img: `${process.env.PUBLIC_URL}/img/shoes/02.png`,\r\n    },\r\n    {\r\n      title: 'Puma Suede',\r\n      quantity: 23,\r\n      sold: 21,\r\n      total: '$ 1 572',\r\n      img: `${process.env.PUBLIC_URL}/img/shoes/03.png`,\r\n    },\r\n    {\r\n      title: 'Puma Basket Platform',\r\n      quantity: 2,\r\n      sold: 456,\r\n      total: '$ 989',\r\n      img: `${process.env.PUBLIC_URL}/img/shoes/04.png`,\r\n    },\r\n    {\r\n      title: 'Nike Jordan',\r\n      quantity: 189,\r\n      sold: 42,\r\n      total: '$ 542',\r\n      img: `${process.env.PUBLIC_URL}/img/shoes/05.png`,\r\n    },\r\n  ],\r\n  data: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_NEW_ORDER_TABLE_DATA: {\r\n      const loadData = state.items[action.index];\r\n      return { ...state, data: loadData };\r\n    }\r\n    case CHANGE_NEW_ORDER_TABLE_DATA: {\r\n      const updatedItems = [...state.items];\r\n      updatedItems[action.index] = action.data;\r\n      return { ...state, items: updatedItems };\r\n    }\r\n    case DELETE_NEW_ORDER_TABLE_DATA:\r\n      return { ...state, items: action.items };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, createStore } from 'redux';\r\n\r\nimport {\r\n  rtlReducer,\r\n  themeReducer,\r\n  sidebarReducer,\r\n  customizerReducer,\r\n  newOrderTableReducer,\r\n} from '../../redux/reducers/index';\r\n\r\nconst reducer = combineReducers({\r\n  rtl: rtlReducer,\r\n  theme: themeReducer,\r\n  sidebar: sidebarReducer,\r\n  customizer: customizerReducer,\r\n  newOrder: newOrderTableReducer,\r\n});\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","export const CHANGE_DIRECTION_TO_LTR = 'CHANGE_DIRECTION_TO_LTR';\nexport const CHANGE_DIRECTION_TO_RTL = 'CHANGE_DIRECTION_TO_RTL';\n\nexport function changeDirectionToLTR() {\n  return {\n    type: CHANGE_DIRECTION_TO_LTR,\n  };\n}\n\nexport function changeDirectionToRTL() {\n  return {\n    type: CHANGE_DIRECTION_TO_RTL,\n  };\n}\n","export const LOAD_NEW_ORDER_TABLE_DATA = 'LOAD_NEW_ORDER_TABLE_DATA';\r\nexport const CHANGE_NEW_ORDER_TABLE_DATA = 'CHANGE_NEW_ORDER_TABLE_DATA';\r\nexport const DELETE_NEW_ORDER_TABLE_DATA = 'DELETE_NEW_ORDER_TABLE_DATA';\r\n\r\nexport function loadNewOrderTableData(index) {\r\n  return {\r\n    type: LOAD_NEW_ORDER_TABLE_DATA,\r\n    index,\r\n  };\r\n}\r\n\r\nexport function changeNewOrderTableData(data, index) {\r\n  return {\r\n    type: CHANGE_NEW_ORDER_TABLE_DATA,\r\n    data,\r\n    index,\r\n  };\r\n}\r\n\r\nexport function deleteNewOrderTableData(items) {\r\n  return {\r\n    type: DELETE_NEW_ORDER_TABLE_DATA,\r\n    items,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './containers/App/App';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n","export const CHANGE_BORDER_RADIUS = 'CHANGE_BORDER_RADIUS';\r\nexport const TOGGLE_BOX_SHADOW = 'TOGGLE_BOX_SHADOW';\r\nexport const TOGGLE_TOP_NAVIGATION = 'TOGGLE_TOP_NAVIGATION';\r\n\r\nexport function changeBorderRadius() {\r\n  return {\r\n    type: CHANGE_BORDER_RADIUS,\r\n  };\r\n}\r\n\r\nexport function toggleBoxShadow() {\r\n  return {\r\n    type: TOGGLE_BOX_SHADOW,\r\n  };\r\n}\r\n\r\nexport function toggleTopNavigation() {\r\n  return {\r\n    type: TOGGLE_TOP_NAVIGATION,\r\n  };\r\n}\r\n","const handleResponse = async (response, callback) => {\n  if (localStorage.getItem(\"user\")) {\n    localStorage.setItem(\"last-action\", Date.now());\n  }\n\n  if ([200, 201].includes(response.status)) {\n    try {\n      callback(null, await response.json());\n    } catch (error) {\n      // there's no response, for example in \"DELETE\" method.\n      callback(null, true);\n    }\n  } else if (response.status === 400) {\n    callback('One of the parameters is wrong or missing.', null);\n  } else {\n    callback(await response.json(), null);\n  }\n};\n\nexport {\n  handleResponse\n}\n","export const CHANGE_THEME_TO_DARK = 'CHANGE_THEME_TO_DARK';\r\nexport const CHANGE_THEME_TO_LIGHT = 'CHANGE_THEME_TO_LIGHT';\r\n\r\nexport function changeThemeToDark() {\r\n  return {\r\n    type: CHANGE_THEME_TO_DARK,\r\n  };\r\n}\r\n\r\nexport function changeThemeToLight() {\r\n  return {\r\n    type: CHANGE_THEME_TO_LIGHT,\r\n  };\r\n}\r\n","export const CHANGE_SIDEBAR_VISIBILITY = 'CHANGE_SIDEBAR_VISIBILITY';\r\nexport const CHANGE_MOBILE_SIDEBAR_VISIBILITY = 'CHANGE_MOBILE_SIDEBAR_VISIBILITY';\r\n\r\nexport function changeSidebarVisibility() {\r\n  return {\r\n    type: CHANGE_SIDEBAR_VISIBILITY,\r\n  };\r\n}\r\n\r\nexport function changeMobileSidebarVisibility() {\r\n  return {\r\n    type: CHANGE_MOBILE_SIDEBAR_VISIBILITY,\r\n  };\r\n}\r\n"],"sourceRoot":""}